{"version":3,"sources":["assets/images/logo.png","redux/reducers/index.ts","redux/reducers/todos.ts","redux/actionTypes.ts","redux/reducers/tomatoes.ts","redux/store.ts","redux/actions/todos.ts","redux/actions/tomatoes.ts","redux/actions/index.ts","config/history.ts","config/axios.ts","components/Tomatoes/CountDown/CountDown.tsx","constants.ts","redux/selectors.ts","components/Todos/TodoInput/TodoInput.tsx","components/Todos/TodoItem/TodoItem.tsx","components/Todos/Todos.tsx","components/Tomatoes/TomatoAction/TomatoAction.tsx","components/Tomatoes/TomatoList/TomatoList.tsx","components/Tomatoes/Tomatoes.tsx","components/Statistics/Graph/Graph.tsx","utils/helpers.tsx","components/Statistics/TodoHistoryItem/TodoHistoryItem.tsx","components/Statistics/TomatoHistoryItem/TomatoHistoryItem.tsx","components/Statistics/AbortedList/AbortedList.tsx","components/Statistics/CompletedList/CompletedList.tsx","components/Statistics/TodoHistory/TodoHistory.tsx","components/Statistics/AddTomato/AddTomato.tsx","components/Statistics/TomatoHistory/TomatoHistory.tsx","components/Statistics/Statistics.tsx","pages/Home/Home.tsx","pages/Login/Login.tsx","pages/Register/Register.tsx","serviceWorker.ts","index.tsx","App.tsx"],"names":["module","exports","combineReducers","todos","state","action","type","payload","map","todo","id","Object","assign","editing","tomatoes","tomato","store","createStore","rootReducer","addTodo","initTodos","updateTodo","editTodo","addTomato","initTomatoes","updateTomato","history","createHashHistory","instance","axios","create","baseURL","headers","interceptors","request","use","config","xToken","localStorage","getItem","error","console","Promise","reject","response","setItem","status","push","timerID","TODO_FILTERS","TOMATO_FILTERS","getTodos","getTodosByFilter","todoFilter","allTodos","notDeletedTodos","filter","deleted","getNotDeletedTodos","completed","getTomatoesByFilter","tomatoFilter","allTomatoes","getTomatoes","description","ended_at","aborted","groupByDay","dataBeforeGroup","keyOfTime","_","groupBy","item","format","parseISO","TodoInput","props","React","useState","setDescription","inputCheck","message","warning","a","async","post","data","resource","EnterIcon","onClick","className","placeholder","suffix","value","onChange","e","target","onKeyUp","keyCode","TodoItem","textContent","setTextContent","params","completed_at","Date","put","EditField","theme","Text","onDoubleClick","todoItemClass","classNames","checked","mapDispatchToProps","actions","connect","ownProps","incompleteTodos","key","CountDown","startCountDown","setInterval","restTime","setState","document","title","clock","onTimeOver","onFinish","clearInterval","this","percent","duration","style","width","minutes","Math","floor","seconds","toString","padStart","Component","confirm","TomatoAction","startTomato","onClickCancel","okText","cancelText","onOk","abortTomato","unfinishedTomato","forceUpdate","addDescription","Html","undefined","startAt","parse","started_at","timeNow","getTime","TomatoItem","TomatoList","List","dates","date","finishedTomatoes","Title","length","Details","keys","sort","b","splice","finishedTomatoesByDay","Graph","fill","stroke","strokeWidth","points","height","firstDay","range","finishedCount","pointArray","x","y","totalFinishCount","join","genPoints","weekTimeTable","getFriendlyDate","method","ISODate","monthAndDay","weekTime","groupByLength","array","result","i","slice","TodoHistoryItem","time","created_at","TomatoHistoryItem","submitChange","onKeyup","Description","Time","Action","AbortedList","CompletedList","totalTime","reduce","hours","getFriendlyTime","TabPane","TodoHistory","deletedCurrent","completedCurrent","tab","completedDatesByPage","completedTodosByDay","total","completedDates","current","pageSize","deletedTodosByPage","deletedTodos","completedTodos","AddTomato","startedAt","setStartedAt","visible","setVisible","endedAt","moment","add","manually_created","onCancel","locale","showTime","content","icon","TomatoHistory","abortedCurrent","finishedCurrent","finishedDatesByPage","finishedDates","abortedTomatoesByPage","abortedTomatoes","Statistics","currentIndex","currentTarget","getAttribute","graphWidth","body","clientWidth","graphHeight","HistoryDetails","HistoryGraphs","data-index","user","setUser","useHistory","useEffect","get","getMe","resources","onLogout","src","logo","alt","overlay","Item","account","setAccount","password","setPassword","onLogin","Password","to","passwordConfirmation","setPasswordConfirmation","onRegister","password_confirmation","Boolean","window","location","hostname","match","ReactDOM","render","path","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.50cdf292.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.79967085.png\";","import {combineReducers} from 'redux';\r\nimport todos from './todos';\r\nimport tomatoes from './tomatoes';\r\n\r\nexport default combineReducers({todos, tomatoes});","import {ADD_TODO, INIT_TODOS, UPDATE_TODO, EDIT_TODO} from '../actionTypes';\r\n\r\nexport default function (state: any[] = [], action: any) {\r\n  switch (action.type) {\r\n    case ADD_TODO:\r\n      return [action.payload, ...state];\r\n    case INIT_TODOS:\r\n      return [...action.payload];\r\n    case UPDATE_TODO:\r\n      return state.map(todo => {\r\n        if (todo.id === action.payload.id) {\r\n          return action.payload;\r\n        } else {\r\n          return todo;\r\n        }\r\n      });\r\n    case EDIT_TODO:\r\n      return state.map(todo => {\r\n        if (todo.id === action.payload) {\r\n          return Object.assign({}, todo, {editing: true});\r\n        } else {\r\n          return Object.assign({}, todo, {editing: false});\r\n        }\r\n      });\r\n    default:\r\n      return state;\r\n  }\r\n}","export const ADD_TODO = 'ADD_TODO';\r\nexport const INIT_TODOS = 'INIT_TODOS';\r\nexport const UPDATE_TODO = 'UPDATE_TODO';\r\nexport const EDIT_TODO = 'EDIT_TODO';\r\nexport const ADD_TOMATO = 'ADD_TOMATO';\r\nexport const INIT_TOMATOES = 'INIT_TOMATOES';\r\nexport const UPDATE_TOMATO = 'UPDATE_TOMATO';\r\n","import {ADD_TOMATO, INIT_TOMATOES, UPDATE_TOMATO} from '../actionTypes';\r\n\r\nexport default function (state: any[] = [], action: any) {\r\n  switch (action.type) {\r\n    case ADD_TOMATO:\r\n      return [action.payload, ...state];\r\n    case INIT_TOMATOES:\r\n      return [...action.payload];\r\n    case UPDATE_TOMATO:\r\n      return state.map(tomato => {\r\n      if (tomato.id === action.payload.id) {\r\n        return action.payload;\r\n      } else {\r\n        return tomato;\r\n      }\r\n    });\r\n    default:\r\n      return state;\r\n  }\r\n}","import {createStore} from 'redux';\r\nimport rootReducer from './reducers'\r\n\r\nconst store = createStore(rootReducer);\r\n\r\nexport default store","import {ADD_TODO, INIT_TODOS, UPDATE_TODO, EDIT_TODO} from '../actionTypes';\r\n\r\nconst addTodo = (payload: any) => {\r\n  return {\r\n    type: ADD_TODO,\r\n    payload\r\n  };\r\n};\r\n\r\nconst initTodos = (payload: any[]) => {\r\n  return {\r\n    type: INIT_TODOS,\r\n    payload\r\n  };\r\n};\r\n\r\nconst updateTodo = (payload: any) => {\r\n  return {\r\n    type: UPDATE_TODO,\r\n    payload\r\n  };\r\n};\r\n\r\nconst editTodo = (payload: number) => {\r\n  return {\r\n    type: EDIT_TODO,\r\n    payload\r\n  };\r\n};\r\n\r\nexport default {\r\n  addTodo,\r\n  initTodos,\r\n  updateTodo,\r\n  editTodo\r\n}","import {ADD_TOMATO, INIT_TOMATOES, UPDATE_TOMATO} from '../actionTypes';\r\n\r\nconst addTomato = (payload: any) => {\r\n  return {\r\n    type: ADD_TOMATO,\r\n    payload\r\n  };\r\n};\r\n\r\nconst initTomatoes = (payload: any[]) => {\r\n  return {\r\n    type: INIT_TOMATOES,\r\n    payload\r\n  };\r\n};\r\n\r\nconst updateTomato = (payload: any) => {\r\n  return {\r\n    type: UPDATE_TOMATO,\r\n    payload\r\n  };\r\n};\r\n\r\nexport default {\r\n  addTomato,\r\n  initTomatoes,\r\n  updateTomato\r\n};","import todos from './todos';\r\nimport tomatoes from './tomatoes';\r\n\r\n\r\nexport default {\r\n  ...todos,\r\n  ...tomatoes\r\n};","import {createHashHistory} from 'history';\n\nconst history = createHashHistory();\n\nexport default history;","import axios from 'axios';\nimport history from './history';\n\nconst appId = 'nM5mG7x9MSDwWD4NMoNCLYE4';\nconst appSecret = 'VAAyTtmgzQhn4rks36XBYQfi';\n\nconst instance = axios.create({\n  baseURL: 'https://gp-server.hunger-valley.com/',\n  headers: {\n    't-app-id': appId,\n    't-app-secret': appSecret\n  }\n});\n\ninstance.interceptors.request.use((config) => {\n  const xToken = localStorage.getItem('x-token');\n  if (xToken) {\n    config.headers['Authorization'] = `Bearer ${xToken}`;\n  }\n  return config;\n}, (error) => {\n  console.error(error);\n  return Promise.reject(error);\n});\n\ninstance.interceptors.response.use((response) => {\n  if (response.headers['x-token']) {\n    localStorage.setItem('x-token', response.headers['x-token']);\n  }\n  return response;\n}, (error) => {\n  if(error.response.status === 401){\n    history.push('/login')\n  }\n  return Promise.reject(error);\n});\n\nexport default instance;","import React from 'react';\nimport './CountDown.less';\n\ninterface ICountDownProps {\n  restTime: number,\n  duration: number,\n  onFinish: () => void\n}\n\ninterface IContDownStates {\n  restTime: number\n}\n\nlet timerID: NodeJS.Timeout;\n\nclass CountDown extends React.Component <ICountDownProps, IContDownStates> {\n\n  constructor(props: ICountDownProps) {\n    super(props);\n    this.state = {\n      restTime: this.props.restTime\n    };\n  };\n\n  componentDidMount(): void {\n    this.startCountDown();\n  };\n\n  componentWillUnmount(): void {\n    this.onTimeOver();\n  };\n\n  get clock() {\n    const minutes = Math.floor(this.state.restTime / 1000 / 60);\n    const seconds = Math.floor(this.state.restTime / 1000 % 60);\n    return `${minutes.toString().padStart(2, '0')}:${seconds.toString().padStart(2, '0')}`;\n  };\n\n  startCountDown = () => {\n    timerID = setInterval(() => {\n      const restTime = this.state.restTime;\n      this.setState({restTime: restTime - 1000});\n      document.title = `${this.clock} - 有一个番茄正在进行`;\n      if (restTime < 1000) {\n        this.onTimeOver();\n      }\n    }, 1000);\n  };\n\n  onTimeOver = () => {\n    this.props.onFinish();\n    clearInterval(timerID);\n  };\n\n  public render() {\n    const percent = 1 - this.state.restTime / this.props.duration;\n    return (\n      <div className=\"count-down\">\n        <span>{this.clock}</span>\n        <div className=\"progress-bar\" style={{width: `${percent * 100}%`}}></div>\n      </div>\n    );\n  }\n}\n\nexport default CountDown;","export const TODO_FILTERS = {\r\n  ALL: 'all',\r\n  DELETED: 'deleted',\r\n  COMPLETED: 'completed',\r\n  INCOMPLETE: 'incomplete'\r\n};\r\n\r\nexport const TOMATO_FILTERS = {\r\n  ALL: 'all',\r\n  FINISHED: 'finished',\r\n  UNFINISHED: 'unfinished',\r\n  ABORTED: 'aborted'\r\n};","import _ from 'lodash';\nimport {format, parseISO} from 'date-fns';\nimport {TODO_FILTERS, TOMATO_FILTERS} from '../constants';\n\nconst getTodos = (store: any) => (store.todos);\n\nconst getNotDeletedTodos = (store: any) => {\n  const allTodos = getTodos(store);\n  return allTodos.filter((todo: any) => (!todo.deleted));\n};\n\nexport const getTodosByFilter = (store: any, todoFilter: string) => {\n  const allTodos = getTodos(store);\n  const notDeletedTodos = getNotDeletedTodos(store);\n  switch (todoFilter) {\n    case TODO_FILTERS.DELETED:\n      return allTodos.filter((todo: any) => (todo.deleted));\n    case TODO_FILTERS.COMPLETED:\n      return notDeletedTodos.filter((todo: any) => (todo.completed));\n    case TODO_FILTERS.INCOMPLETE:\n      return notDeletedTodos.filter((todo: any) => (!todo.completed));\n    default:\n      return notDeletedTodos;\n  }\n};\n\nconst getTomatoes = (store: any) => (store.tomatoes);\n\nexport const getTomatoesByFilter = (store: any, tomatoFilter: string) => {\n  const allTomatoes = getTomatoes(store);\n  switch (tomatoFilter) {\n    case TOMATO_FILTERS.FINISHED:\n      return allTomatoes.filter((tomato: any) => (tomato.description && tomato.ended_at && !tomato.aborted));\n    case TOMATO_FILTERS.UNFINISHED:\n      return allTomatoes.filter((tomato: any) => (!tomato.description && !tomato.ended_at && !tomato.aborted))[0];\n    case TOMATO_FILTERS.ABORTED:\n      return allTomatoes.filter((tomato: any)=>(!tomato.ended_at && tomato.aborted));\n    default:\n      return tomatoFilter;\n  }\n};\n\nexport const groupByDay = (dataBeforeGroup: any[], keyOfTime: string) => {\n  return _.groupBy(dataBeforeGroup, (item) => {\n    return (format(parseISO(item[keyOfTime]), 'yyyy-MM-dd'));\n  });\n};","import React from 'react';\r\nimport axios from '../../../config/axios';\r\n\r\nimport {Input, Icon, message} from 'antd';\r\nimport './TodoInput.less';\r\n\r\ninterface ITodoInputProps {\r\n  addTodo: (payload: any) => any\r\n}\r\n\r\nconst TodoInput = (props: ITodoInputProps) => {\r\n  const [description, setDescription] = React.useState('');\r\n\r\n  const onKeyUp = (e: any) => {\r\n    if (e.keyCode === 13) {\r\n      if (inputCheck()) {\r\n        addTodo();\r\n      }\r\n    }\r\n  };\r\n\r\n  const onClick = () => {\r\n    if (inputCheck()) {\r\n      addTodo();\r\n    }\r\n  };\r\n\r\n  const inputCheck = () => {\r\n    if (description === '') {\r\n      message.warning('还是说点儿什么吧');\r\n      return false;\r\n    }\r\n    return true;\r\n  };\r\n\r\n  const addTodo = async () => {\r\n    try {\r\n      const response = await axios.post('todos', {description});\r\n      setDescription('');\r\n      props.addTodo(response.data.resource);\r\n    } catch (e) {\r\n      message.error('网络好像有点不太好哦，一会儿再试吧');\r\n    }\r\n  };\r\n\r\n  const EnterIcon = description ? <Icon type=\"enter\" onClick={onClick}/> : <span/>;\r\n\r\n  return (\r\n    <div className=\"todo-input\">\r\n      <Input\r\n        placeholder=\"添加新任务\"\r\n        suffix={EnterIcon}\r\n        value={description}\r\n        onChange={e => {\r\n          setDescription(e.target.value);\r\n        }}\r\n        onKeyUp={onKeyUp}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TodoInput;","import React from 'react';\nimport axios from '../../../config/axios';\nimport classNames from 'classnames';\n\nimport {Checkbox, Icon, message} from 'antd';\nimport './TodoItem.less';\n\ninterface ITodoItemProps {\n  id: number,\n  description: string,\n  completed: boolean,\n  editing: boolean,\n  updateTodo: (payload: any) => any,\n  editTodo: (id: number) => any\n}\n\nconst TodoItem = (props: ITodoItemProps) => {\n\n  const [textContent, setTextContent] = React.useState(props.description);\n\n  const onClickEnter = () => {\n    if (inputCheck()) {\n      updateTodo({description: textContent});\n    }\n  };\n\n  const onClickDelete = () => {\n    updateTodo({deleted: true});\n  };\n\n  const onKeyUp = (e: any) => {\n    if (e.keyCode === 13) {\n      if (inputCheck()) {\n        updateTodo({description: textContent});\n      }\n    }\n  };\n\n  const inputCheck = () => {\n    if (textContent === '') {\n      message.warning('还是说点儿什么吧');\n      return false;\n    }\n    return true;\n  };\n\n  const updateTodo = async (params: any) => {\n    if (params.completed) {\n      params.completed_at = new Date();\n    }\n    try {\n      const response = await axios.put(`todos/${props.id}`, params);\n      props.updateTodo(response.data.resource);\n    } catch (e) {\n      message.error('网络好像有点不太好哦，一会儿再试吧');\n    }\n  };\n\n  const editTodo = () => {\n    props.editTodo(props.id);\n  };\n\n  const EditField = (\n    <div className=\"edit-filed\">\n      <input type=\"text\"\n             value={textContent}\n             onChange={(e) => {\n               setTextContent(e.target.value);\n             }}\n             onKeyUp={onKeyUp}\n      />\n      <div className=\"icon-wrapper\">\n        <Icon type=\"enter\" onClick={onClickEnter}/>\n        <Icon type=\"delete\" theme=\"filled\" onClick={onClickDelete}/>\n      </div>\n    </div>\n  );\n\n  const Text = (\n    <span className=\"text\" onDoubleClick={editTodo}>{textContent}</span>\n  );\n\n  const todoItemClass = classNames({\n    'todo-item': true,\n    'editing': props.editing,\n    'completed': props.completed\n  });\n\n  return (\n    <div className={todoItemClass}>\n      <Checkbox\n        checked={props.completed}\n        onChange={(e) => {\n          updateTodo({completed: e.target.checked});\n        }}\n      />\n      {props.editing ? EditField : Text}\n    </div>\n  );\n};\n\nexport default TodoItem;","import React from 'react';\n\nimport {connect} from 'react-redux';\nimport actions from '../../redux/actions';\nimport {TODO_FILTERS} from '../../constants';\nimport {getTodosByFilter} from '../../redux/selectors';\n\nimport TodoInput from './TodoInput/TodoInput';\nimport TodoItem from './TodoItem/TodoItem';\nimport './Todos.less';\n\ninterface ITodosProps {\n  incompleteTodos: any,\n  updateTodo: (payload: any) => {\n    type: string,\n    payload: any\n  },\n  editTodo: (id: number) => {\n    type: string,\n    payload: any\n  },\n  addTodo: (payload: any) => {\n    type: string,\n    payload: any\n  }\n}\n\nconst Todos = (props: ITodosProps) => {\n\n  return (\n    <div className=\"todos\">\n      <TodoInput\n        addTodo={props.addTodo}\n      />\n      <div className=\"todo-list\">\n        {\n          props.incompleteTodos.map((todo: any) => (\n            <TodoItem\n              key={todo.id} {...todo}\n              updateTodo={props.updateTodo}\n              editTodo={props.editTodo}\n            />\n          ))\n        }\n      </div>\n    </div>\n  );\n};\n\nconst mapStateToProps = (state: any, ownProps: any) => {\n  const incompleteTodos = getTodosByFilter(state, TODO_FILTERS.INCOMPLETE);\n  return {\n    incompleteTodos,\n    ...ownProps\n  };\n};\n\nconst mapDispatchToProps = {\n  addTodo: actions.addTodo,\n  editTodo: actions.editTodo,\n  updateTodo: actions.updateTodo\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Todos);","import React from 'react';\nimport axios from '../../../config/axios';\n\nimport CountDown from '../CountDown/CountDown';\n\nimport {Button, Icon, Input, message, Modal} from 'antd';\nimport './TomatoAction.less';\n\nconst {confirm} = Modal;\n\ninterface ITomatoActionProps {\n  addTomato: (payload: any) => {\n    type: string,\n    payload: any\n  },\n  updateTomato: (payload: any) => {\n    type: string,\n    payload: any\n  },\n  unfinishedTomato: any\n}\n\ninterface ITomatoActionState {\n  description: string\n}\n\nclass TomatoAction extends React.Component<ITomatoActionProps, ITomatoActionState> {\n\n  constructor(props: ITomatoActionProps) {\n    super(props);\n    this.state = {\n      description: ''\n    };\n  }\n\n  startTomato = async () => {\n    try {\n      const response = await axios.post('tomatoes', {duration: 25 * 60 * 1000});\n      this.props.addTomato(response.data.resource);\n    } catch (e) {\n      message.error('网络好像有点不太好哦，一会儿再试吧');\n    }\n  };\n\n  onClickCancel = () => {\n    confirm({\n      title: '您确定要放弃这个番茄吗？',\n      okText: '确认',\n      cancelText: '关闭',\n      onOk: () => {\n        this.abortTomato();\n      }\n    });\n  };\n\n  abortTomato = () => {\n    this.updateTomato({\n      aborted: true\n    });\n    document.title = 'Potado - 你的番茄土豆';\n  };\n\n  updateTomato = async (params: any) => {\n    try {\n      const response = await axios.put(`tomatoes/${this.props.unfinishedTomato.id}`, params);\n      this.props.updateTomato(response.data.resource);\n    } catch (e) {\n      message.error('网络好像有点不太好哦，一会儿再试吧');\n    }\n  };\n\n  onFinish = () => {\n    this.forceUpdate();\n    document.title = 'Potado - 你的番茄土豆';\n  };\n\n  onKeyUp = (e: any) => {\n    if (e.keyCode === 13) {\n      if (this.inputCheck()) {\n        this.addDescription();\n      }\n    }\n  };\n\n  inputCheck = () => {\n    if (this.state.description === '') {\n      message.warning('还是说点儿什么吧');\n      return false;\n    }\n    return true;\n  };\n\n  addDescription = () => {\n    if (this.state.description === '') {\n      this.setState({description: '这是一个没有描述的番茄'});\n    }\n    this.updateTomato({\n      description: this.state.description,\n      ended_at: new Date()\n    });\n    this.setState({description: ''});\n  };\n\n  public render() {\n    let Html: any;\n    if (this.props.unfinishedTomato === undefined) {\n      Html = <Button className=\"start-button\" onClick={this.startTomato}>开始一个番茄</Button>;\n    } else {\n      const startAt = Date.parse(this.props.unfinishedTomato.started_at);\n      const duration = this.props.unfinishedTomato.duration;\n      const timeNow = new Date().getTime();\n      if (timeNow - startAt > duration) {\n        Html = (\n          <div className=\"input-wrapper\">\n            <Input\n              value={this.state.description}\n              placeholder=\"请输入刚刚完成的任务\"\n              onChange={(e) => {\n                this.setState({description: e.target.value});\n              }}\n              onKeyUp={this.onKeyUp}\n            />\n            <Icon\n              type=\"close-circle\"\n              className=\"abort\"\n              onClick={this.onClickCancel}\n            />\n          </div>\n        );\n      } else {\n        const restTime = duration - (timeNow - startAt);\n        Html = (\n          <div className=\"count-down-wrapper\">\n            <CountDown\n              restTime={restTime}\n              duration={duration}\n              onFinish={this.onFinish}\n            />\n            <Icon\n              type=\"close-circle\"\n              className=\"abort\"\n              onClick={this.onClickCancel}\n            />\n          </div>\n        );\n      }\n    }\n    return (\n      <div className=\"tomato-action\">\n        {Html}\n      </div>\n    );\n  }\n}\n\nexport default TomatoAction;","import React from 'react';\nimport {format, parseISO} from 'date-fns';\nimport './TomatoList.less';\n\ninterface ITomatoListProps {\n  finishedTomatoes: any\n}\n\nconst TomatoItem = (props: any) => {\n  return (\n    <div className=\"tomato-item\">\n      <span\n        className=\"time-range\">{format(parseISO(props.started_at), 'HH:mm')} - {format(parseISO(props.ended_at), 'HH:mm')}</span>\n      <span className=\"description\">{props.description}</span>\n    </div>\n  );\n};\n\nclass TomatoList extends React.Component<ITomatoListProps, any> {\n\n  get dates() {\n    const dates = Object.keys(this.props.finishedTomatoes);\n    return dates.sort((a, b) => Date.parse(b) - Date.parse(a)).splice(0, 3);\n  }\n\n  public render() {\n\n    const List = this.dates.map(date => {\n      const tomatoes = this.props.finishedTomatoes[date];\n      const Title = (\n        <div className=\"title\">\n          <span className=\"date-time\">{format(new Date(date), 'M月d日')}</span>\n          <span className=\"finished-count\">完成了 {tomatoes.length} 个番茄</span>\n        </div>\n      );\n      const Details = (\n        <div className=\"details\">\n          {tomatoes.map((tomato: any) => (<TomatoItem key={tomato.id} {...tomato}/>))}\n        </div>\n      );\n      return (\n        <div key={date} className=\"daily-tomatoes\">\n          {\n            Title\n          }\n          {\n            Details\n          }\n        </div>\n      );\n    });\n\n    return (\n      <div className=\"tomato-list\">\n        {\n          List\n        }\n      </div>\n    );\n  }\n}\n\nexport default TomatoList;","import React from 'react';\nimport TomatoAction from './TomatoAction/TomatoAction';\nimport TomatoList from './TomatoList/TomatoList';\n\nimport actions from '../../redux/actions';\nimport {connect} from 'react-redux';\nimport {TOMATO_FILTERS} from '../../constants';\nimport {getTomatoesByFilter, groupByDay} from '../../redux/selectors';\n\n\nimport './Tomatoes.less';\n\ninterface ITomatoesProps {\n  tomatoes: any[],\n  addTomato: (payload: any) => {\n    type: string,\n    payload: any\n  },\n  updateTomato: (payload: any) => {\n    type: string,\n    payload: any\n  },\n  unfinishedTomato: any,\n  finishedTomatoes: any[],\n  finishedTomatoesByDay: any\n}\n\nconst Tomatoes = (props: ITomatoesProps) => {\n\n  return (\n    <div className=\"tomatoes\">\n      <TomatoAction\n        addTomato={props.addTomato}\n        updateTomato={props.updateTomato}\n        unfinishedTomato={props.unfinishedTomato}\n      />\n      <TomatoList\n        finishedTomatoes={props.finishedTomatoesByDay}\n      />\n    </div>\n  );\n};\n\nconst mapStateToProps = (state: any) => {\n  const tomatoes = state.tomatoes;\n  const finishedTomatoes = getTomatoesByFilter(state, TOMATO_FILTERS.FINISHED);\n  const unfinishedTomato = getTomatoesByFilter(state, TOMATO_FILTERS.UNFINISHED);\n  const finishedTomatoesByDay = groupByDay(finishedTomatoes, 'started_at');\n  return {\n    tomatoes,\n    finishedTomatoes,\n    unfinishedTomato,\n    finishedTomatoesByDay\n  };\n};\n\nconst mapDispatchToProps = {\n  addTomato: actions.addTomato,\n  updateTomato: actions.updateTomato,\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Tomatoes);","import React from 'react';\r\n\r\ninterface IGraphProps {\r\n  data: any,\r\n  totalFinishCount: number,\r\n  width: number,\r\n  height: number\r\n}\r\n\r\nconst Graph = (props: IGraphProps) => {\r\n\r\n  const genPoints = (width: number, height: number) => {\r\n    const dates = Object.keys(props.data).sort((a, b) => Date.parse(a) - Date.parse(b));\r\n    const firstDay = Date.parse(dates[0]) - 24 * 60 * 60 * 1000;\r\n    if (firstDay) {\r\n      const lastDay = new Date().getTime();\r\n      const range = lastDay - firstDay;\r\n      let finishedCount = 0;\r\n      const pointArray = dates.map(date => {\r\n        let x = (Date.parse(date) - firstDay) / range * width;\r\n        if (range === 0) {\r\n          x = width;\r\n        }\r\n        finishedCount += props.data[date].length;\r\n        const y = (1 - finishedCount / props.totalFinishCount) * height;\r\n        return `${x},${y}`;\r\n      });\r\n      return [`0,${height}`, ...pointArray, `${width},0`,`${width},${height}`].join(' ');\r\n    } else {\r\n      return `0,${height} ${width},${height}`;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"graph\">\r\n      <svg>\r\n        <polygon fill=\"rgba(201,72,91,.1)\" stroke=\"rgba(201,72,91,.5)\" strokeWidth=\"1\"\r\n                 points={genPoints(props.width, props.height)}/>\r\n      </svg>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Graph;","import {format, parseISO} from 'date-fns';\r\n\r\ninterface IWeekTimeTable {\r\n  [key: string]: string\r\n}\r\n\r\nconst weekTimeTable: IWeekTimeTable = {\r\n  '1': '周一', '2': '周二', '3': '周三', '4': '周四', '5': '周五', '6': '周六', '7': '周日'\r\n};\r\n\r\nexport const getFriendlyDate = (date: string, method: string) => {\r\n  const ISODate = parseISO(date);\r\n  const monthAndDay = format(ISODate, 'M月d日');\r\n  const weekTime = format(ISODate, 'i');\r\n  switch (method) {\r\n    case 'monthAndDay':\r\n      return monthAndDay;\r\n    case 'dayOfWeek':\r\n      return weekTimeTable[weekTime];\r\n  }\r\n};\r\n\r\nexport const groupByLength = (array: any[], length: number) => {\r\n  const result = [];\r\n  for (let i = 0; i < array.length; i += length) {\r\n    result.push(array.slice(i, i + length));\r\n  }\r\n  return result;\r\n};","import React from 'react';\r\nimport axios from '../../../config/axios';\r\nimport {format, parseISO} from 'date-fns';\r\nimport {getFriendlyDate} from '../../../utils/helpers';\r\n\r\nimport {connect} from 'react-redux';\r\nimport actions from '../../../redux/actions';\r\n\r\nimport './TodoHistoryItem.less';\r\n\r\n\r\ninterface ITodoHistoryItemProps {\r\n  todo: any,\r\n  type: string,\r\n  updateTodo: (payload: any) => void\r\n}\r\n\r\nclass TodoHistoryItem extends React.Component<ITodoHistoryItemProps, any> {\r\n\r\n\r\n  updateTodo = async (params: any) => {\r\n    try {\r\n      const response = await axios.put(`todos/${this.props.todo.id}`, params);\r\n      this.props.updateTodo(response.data.resource);\r\n    } catch (e) {\r\n\r\n    }\r\n  };\r\n\r\n  render() {\r\n    let time = null;\r\n    if (this.props.type === 'completed') {\r\n      time = (<span className=\"time\">{format(parseISO(this.props.todo.completed_at), 'HH:mm')}</span>);\r\n    } else if (this.props.type === 'deleted') {\r\n      time = (<span className=\"time\">{getFriendlyDate(this.props.todo.created_at,'monthAndDay')}</span>);\r\n    }\r\n\r\n    let action = null;\r\n    if (this.props.type === 'completed') {\r\n      action = (\r\n        <div className=\"action\">\r\n          <span onClick={() => this.updateTodo({completed: false})}>恢复</span>\r\n          <span onClick={() => this.updateTodo({deleted: true})}>删除</span>\r\n        </div>\r\n      );\r\n    } else if (this.props.type === 'deleted') {\r\n      action = (\r\n        <div className=\"action\">\r\n          <span onClick={() => this.updateTodo({deleted: false})}>恢复</span>\r\n        </div>\r\n      );\r\n    }\r\n\r\n    return (\r\n      <div>\r\n        <div className=\"todo-history-item\">\r\n          <div className=\"text\">\r\n            {\r\n              time\r\n            }\r\n            <span className=\"description\">{this.props.todo.description}</span>\r\n          </div>\r\n          {\r\n            action\r\n          }\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state: any, ownProps: any) => ({\r\n  ...ownProps\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n  updateTodo: actions.updateTodo\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(TodoHistoryItem);","import React from 'react';\r\nimport axios from '../../../config/axios';\r\nimport {format, parseISO} from 'date-fns';\r\n\r\nimport {connect} from 'react-redux';\r\nimport actions from '../../../redux/actions';\r\n\r\nimport './TomatoHistoryItem.less';\r\nimport {getFriendlyDate} from '../../../utils/helpers';\r\n\r\ninterface ITomatoHistoryItemProps {\r\n  type: string,\r\n  tomato: any,\r\n  updateTomato: (payload: any) => any,\r\n}\r\n\r\nclass TomatoHistoryItem extends React.Component<ITomatoHistoryItemProps, any> {\r\n\r\n  constructor(props: ITomatoHistoryItemProps) {\r\n    super(props);\r\n    this.state = {\r\n      editing: false,\r\n      textContent: this.props.tomato.description || '这是一个没有描述的番茄'\r\n    };\r\n  }\r\n\r\n  updateTomato = async (params: any) => {\r\n    try {\r\n      const response = await axios.put(`tomatoes/${this.props.tomato.id}`, params);\r\n      this.props.updateTomato(response.data.resource);\r\n    } catch (e) {\r\n\r\n    }\r\n  };\r\n\r\n  submitChange = () => {\r\n    this.updateTomato({description: this.state.textContent});\r\n    this.setState({editing: false});\r\n  };\r\n\r\n  onKeyup = (e: any) => {\r\n    if (e.keyCode === 13 && this.state.textContent !== '') {\r\n      this.submitChange();\r\n    }\r\n  };\r\n\r\n  render() {\r\n\r\n    const EditField = (\r\n      <div className=\"edit-filed\">\r\n        <input type=\"text\"\r\n               value={this.state.textContent}\r\n               onChange={(e) => {\r\n                 this.setState({textContent: e.target.value});\r\n               }}\r\n               onKeyUp={this.onKeyup}\r\n        />\r\n      </div>\r\n    );\r\n\r\n    const Description = (\r\n      <span className=\"description\">\r\n        {this.props.tomato.description || '这是一个没有描述的番茄'}\r\n      </span>\r\n    );\r\n\r\n    let Time = null;\r\n    if (this.props.type === 'finished') {\r\n      Time = (\r\n        <span className=\"time\">\r\n          {format(parseISO(this.props.tomato.started_at), 'HH:mm')} -\r\n          {format(parseISO(this.props.tomato.ended_at), 'HH:mm')}\r\n        </span>)\r\n      ;\r\n    } else if (this.props.type === 'aborted') {\r\n      Time = (<span className=\"time\">{getFriendlyDate(this.props.tomato.started_at,'monthAndDay')}</span>);\r\n    }\r\n\r\n    let Action = null;\r\n    if (this.state.editing) {\r\n      Action = (\r\n        <div className=\"action\">\r\n          <span onClick={() => this.submitChange()}>提交</span>\r\n          <span onClick={() => this.setState({editing: false})}>取消</span>\r\n        </div>\r\n      );\r\n    } else {\r\n      if (this.props.type === 'finished') {\r\n        Action = (\r\n          <div className=\"action\">\r\n            <span onClick={() => this.setState({editing: true})}>编辑</span>\r\n            <span onClick={() => this.updateTomato({aborted: true})}>删除</span>\r\n          </div>\r\n        );\r\n      } else if (this.props.type === 'aborted') {\r\n        Action = (\r\n          <div className=\"action\">\r\n            <span onClick={() => this.setState({editing: true})}>编辑</span>\r\n          </div>\r\n        );\r\n      }\r\n    }\r\n\r\n\r\n    return (\r\n      <div>\r\n        <div className={`tomato-history-item ${this.state.editing ? 'editing' : '' }`}>\r\n          <div className=\"text\">\r\n            {\r\n              Time\r\n            }\r\n            {\r\n              this.state.editing ? EditField : Description\r\n            }\r\n          </div>\r\n          {\r\n            Action\r\n          }\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state: any, ownProps: any) => ({\r\n  ...ownProps\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n  updateTomato: actions.updateTomato\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(TomatoHistoryItem);","import React from 'react';\r\nimport TodoHistoryItem from '../TodoHistoryItem/TodoHistoryItem';\r\nimport TomatoHistoryItem from '../TomatoHistoryItem/TomatoHistoryItem';\r\n\r\nconst AbortedList = (props: any) => {\r\n  if (props.todos) {\r\n    return (\r\n      props.todos.map((todo: any) => (\r\n        <div key={todo.id}>\r\n          <TodoHistoryItem key={todo.id} todo={todo} type=\"deleted\"/>\r\n        </div>\r\n      ))\r\n    );\r\n  } else if (props.tomatoes) {\r\n    return (\r\n      props.tomatoes.map((tomato: any) => (\r\n        <div key={tomato.id}>\r\n          <TomatoHistoryItem key={tomato.id} tomato={tomato} type=\"aborted\"/>\r\n        </div>\r\n      ))\r\n    );\r\n  } else {\r\n    return (\r\n      <div></div>\r\n    );\r\n  }\r\n};\r\n\r\nexport default AbortedList;","import {getFriendlyDate} from '../../../utils/helpers';\r\nimport TodoHistoryItem from '../TodoHistoryItem/TodoHistoryItem';\r\nimport React from 'react';\r\nimport TomatoHistoryItem from '../TomatoHistoryItem/TomatoHistoryItem';\r\n\r\nconst CompletedList = (props: any) => {\r\n\r\n  const getFriendlyTime = (time: number) => {\r\n    const seconds = Math.floor(time / 1000);\r\n    if (seconds < 60) return `${seconds} 秒`;\r\n    const minutes = Math.floor(seconds / 60);\r\n    if (minutes < 60) return `${minutes} 分钟`;\r\n    const hours = Math.floor(minutes / 60);\r\n    return `${hours} 小时 ${Math.floor(minutes % 60)} 分钟`;\r\n  };\r\n\r\n  if (props.dates) {\r\n    if (props.todos) {\r\n      return (\r\n        props.dates.map((date: string) => {\r\n          const todos = props.todos[date];\r\n          return (\r\n            <div key={date} className=\"daily-todos\">\r\n              <div className=\"title\">\r\n                <p className=\"date\">\r\n                  <span className=\"date-time\">{getFriendlyDate(date, 'monthAndDay')}</span>\r\n                  <span className=\"week-time\">{getFriendlyDate(date, 'dayOfWeek')}</span>\r\n                </p>\r\n                <span className=\"finished-count\">完成了 {todos.length} 个任务</span>\r\n              </div>\r\n              <div className=\"details\">\r\n                {\r\n                  todos.map((todo: any) => (<TodoHistoryItem key={todo.id} todo={todo} type=\"completed\"/>))\r\n                }\r\n              </div>\r\n            </div>\r\n          );\r\n        })\r\n      );\r\n    } else if (props.tomatoes) {\r\n      return (\r\n        props.dates.map((date: string) => {\r\n          const tomatoes = props.tomatoes[date];\r\n          const totalTime = tomatoes.reduce((totalTime: number, tomato: any) => {\r\n            return totalTime + Date.parse(tomato.ended_at) - Date.parse(tomato.started_at);\r\n          }, 0);\r\n          return (\r\n            <div key={date} className=\"daily-tomatoes\">\r\n              <div className=\"title\">\r\n                <p className=\"date\">\r\n                  <span className=\"date-time\">{getFriendlyDate(date, 'monthAndDay')}</span>\r\n                  <span className=\"week-time\">{getFriendlyDate(date, 'dayOfWeek')}</span>\r\n                </p>\r\n                <p className=\"finished-count\">完成了 {tomatoes.length} 个番茄</p>\r\n                <p className=\"total-time\">总计 {getFriendlyTime(totalTime)}</p>\r\n              </div>\r\n              <div className=\"details\">\r\n                {\r\n                  tomatoes.map((tomato: any) => (<TomatoHistoryItem key={tomato.id} tomato={tomato} type=\"finished\"/>))\r\n                }\r\n              </div>\r\n            </div>\r\n          );\r\n        })\r\n      );\r\n    } else {\r\n      return (\r\n        <div></div>\r\n      )\r\n    }\r\n  } else {\r\n    return (\r\n      <div></div>\r\n    );\r\n  }\r\n};\r\n\r\nexport default CompletedList;","import React from 'react';\nimport {groupByLength} from '../../../utils/helpers';\n\nimport {connect} from 'react-redux';\nimport {getTodosByFilter, groupByDay} from '../../../redux/selectors';\nimport {TODO_FILTERS} from '../../../constants';\n\nimport AbortedList from '../AbortedList/AbortedList';\nimport CompletedList from '../CompletedList/CompletedList';\n\nimport {Tabs, Pagination} from 'antd';\nimport './TodoHistory.less';\n\nconst {TabPane} = Tabs;\n\ninterface ITodoHistoryProps {\n  deletedTodos: any[],\n  deletedTodosByPage: any[],\n  completedTodosByDay: any[],\n  completedDatesByPage: any[],\n  completedDates: any[]\n}\n\ninterface ITodoHistoryState {\n  deletedCurrent: number,\n  completedCurrent: number\n}\n\nclass TodoHistory extends React.Component<ITodoHistoryProps, ITodoHistoryState> {\n\n  constructor(props: ITodoHistoryProps) {\n    super(props);\n    this.state = {\n      deletedCurrent: 1,\n      completedCurrent: 1\n    };\n  }\n\n  public render() {\n    return (\n      <div className=\"todo-history\">\n        <Tabs className=\"todo-history-tabs\" type=\"card\">\n\n          <TabPane className=\"todo-history-tab-pane\" tab=\"已完成的任务\" key=\"1\">\n            <CompletedList dates={this.props.completedDatesByPage[this.state.completedCurrent - 1]}\n                           todos={this.props.completedTodosByDay}></CompletedList>\n            <Pagination\n              className=\"pagination\"\n              total={this.props.completedDates.length}\n              onChange={(current: number) => {\n                this.setState({completedCurrent: current});\n              }}\n              pageSize={5}\n            />\n          </TabPane>\n\n          <TabPane className=\"todo-history-tab-pane\" tab=\"已删除的任务\" key=\"2\">\n            <AbortedList todos={this.props.deletedTodosByPage[this.state.deletedCurrent - 1]}></AbortedList>\n            <Pagination\n              className=\"pagination\"\n              total={this.props.deletedTodos.length}\n              onChange={(current: number) => {\n                this.setState({deletedCurrent: current});\n              }}\n              pageSize={10}\n            />\n          </TabPane>\n\n        </Tabs>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state: any, ownProps: any) => {\n  const deletedTodos = getTodosByFilter(state, TODO_FILTERS.DELETED);\n  const deletedTodosByPage = groupByLength(deletedTodos, 10);\n  const completedTodos = getTodosByFilter(state, TODO_FILTERS.COMPLETED);\n  const completedTodosByDay = groupByDay(completedTodos, 'completed_at');\n  const completedDates = Object.keys(completedTodosByDay).sort((a, b) => (Date.parse(b) - Date.parse(a)));\n  const completedDatesByPage = groupByLength(completedDates, 5);\n\n  return {\n    deletedTodos,\n    deletedTodosByPage,\n    completedTodosByDay,\n    completedDates,\n    completedDatesByPage,\n    ...ownProps\n  };\n};\n\nexport default connect(mapStateToProps)(TodoHistory);","import React from 'react';\r\nimport axios from '../../../config/axios';\r\nimport moment from 'moment';\r\nimport {Button, DatePicker, Input, Modal, Popover, message} from 'antd';\r\nimport locale from 'antd/es/date-picker/locale/zh_CN';\r\n\r\nconst AddTomato = (props: any) => {\r\n  const [description, setDescription] = React.useState('');\r\n  const [startedAt, setStartedAt] = React.useState<any>(null);\r\n  const [visible, setVisible] = React.useState(false);\r\n\r\n  const onKeyUp = (e: any) => {\r\n    if (e.keyCode === 13) {\r\n      if (inputCheck()) {\r\n        addTomato();\r\n      }\r\n    }\r\n  };\r\n\r\n  const onConfirm = () => {\r\n    if(inputCheck()){\r\n      addTomato();\r\n    }\r\n  };\r\n\r\n  const inputCheck = () => {\r\n    if (description === '') {\r\n      message.warning('还是说点儿什么吧');\r\n      return false;\r\n    }\r\n    return true;\r\n  };\r\n\r\n  const addTomato = async () => {\r\n    if (description === '') {\r\n      setDescription('这是一个没有描述的番茄');\r\n    }\r\n    // add 会修改原来的时间\r\n    const endedAt = moment(startedAt).add(25, 'minutes');\r\n    try {\r\n      const response = await axios.post('tomatoes', {\r\n        started_at: startedAt.format(),\r\n        ended_at: endedAt.format(),\r\n        description: description,\r\n        manually_created: true\r\n      });\r\n      setDescription('');\r\n      setStartedAt(null);\r\n      props.addTomato(response.data.resource);\r\n      setVisible(false);\r\n    } catch (e) {\r\n      message.error('网络好像有点不太好哦，一会儿再试吧');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Modal\r\n        title=\"补记一个番茄\"\r\n        visible={visible}\r\n        onOk={onConfirm}\r\n        onCancel={() => setVisible(false)}\r\n        okText=\"确认\"\r\n        cancelText=\"取消\"\r\n      >\r\n        <div className=\"add-modal-item\">\r\n          <span className=\"add-modal-label\">番茄的开始时间：</span>\r\n          <DatePicker\r\n            className=\"date-picker\"\r\n            locale={locale}\r\n            placeholder=\"\"\r\n            showTime\r\n            value={startedAt}\r\n            onOk={(value) => setStartedAt(value)}\r\n            onChange={(value) => setStartedAt(value)}\r\n          />\r\n        </div>\r\n        <div className=\"add-modal-item\">\r\n          <span className=\"add-modal-label\">番茄描述：</span>\r\n          <Input\r\n            type=\"text\"\r\n            value={description}\r\n            onChange={(e) => setDescription(e.target.value)}\r\n            onKeyUp={onKeyUp}\r\n          />\r\n        </div>\r\n      </Modal>\r\n      <Popover content=\"补记番茄\">\r\n        <Button onClick={() => setVisible(true)} icon=\"plus\"/>\r\n      </Popover>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AddTomato;","import React from 'react';\r\nimport {groupByLength} from '../../../utils/helpers';\r\n\r\nimport {connect} from 'react-redux';\r\nimport actions from '../../../redux/actions';\r\nimport {getTomatoesByFilter, groupByDay} from '../../../redux/selectors';\r\nimport {TOMATO_FILTERS} from '../../../constants';\r\n\r\nimport AbortedList from '../AbortedList/AbortedList';\r\nimport CompletedList from '../CompletedList/CompletedList';\r\nimport AddTomato from '../AddTomato/AddTomato';\r\n\r\nimport {Tabs, Pagination} from 'antd';\r\nimport './TomatoHistory.less';\r\n\r\nconst {TabPane} = Tabs;\r\n\r\ninterface ITomatoHistoryProps {\r\n  abortedTomatoes: any[],\r\n  abortedTomatoesByPage: any[],\r\n  finishedTomatoesByDay: any[],\r\n  finishedDates: any[],\r\n  finishedDatesByPage: any[],\r\n  addTomato: (payload: any) => any,\r\n}\r\n\r\ninterface ITomatoHistoryState {\r\n  abortedCurrent: number,\r\n  finishedCurrent: number\r\n}\r\n\r\nclass TomatoHistory extends React.Component<ITomatoHistoryProps, ITomatoHistoryState> {\r\n\r\n  constructor(props: ITomatoHistoryProps) {\r\n    super(props);\r\n    this.state = {\r\n      abortedCurrent: 1,\r\n      finishedCurrent: 1\r\n    };\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"tomato-history\">\r\n        <Tabs className=\"tomato-history-tabs\" type=\"card\">\r\n\r\n          <TabPane className=\"tomato-history-tab-pane\" tab=\"完成的番茄\" key=\"1\">\r\n            <AddTomato addTomato={this.props.addTomato}/>\r\n            <CompletedList dates={this.props.finishedDatesByPage[this.state.finishedCurrent - 1]}\r\n                           tomatoes={this.props.finishedTomatoesByDay}/>\r\n            <Pagination\r\n              className=\"pagination\"\r\n              total={this.props.finishedDates.length}\r\n              onChange={(current: number) => {\r\n                this.setState({finishedCurrent: current});\r\n              }}\r\n              pageSize={5}\r\n            />\r\n          </TabPane>\r\n\r\n          <TabPane className=\"tomato-history-tab-pane\" tab=\"被打断的番茄\" key=\"2\">\r\n            <AbortedList tomatoes={this.props.abortedTomatoesByPage[this.state.abortedCurrent - 1]}/>\r\n            <Pagination\r\n              className=\"pagination\"\r\n              total={this.props.abortedTomatoes.length}\r\n              onChange={(current: number) => {\r\n                this.setState({abortedCurrent: current});\r\n              }}\r\n              pageSize={10}\r\n            />\r\n          </TabPane>\r\n\r\n        </Tabs>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state: any, ownProps: any) => {\r\n  const abortedTomatoes = getTomatoesByFilter(state, TOMATO_FILTERS.ABORTED);\r\n  const abortedTomatoesByPage = groupByLength(abortedTomatoes, 10);\r\n  const finishedTomatoes = getTomatoesByFilter(state, TOMATO_FILTERS.FINISHED);\r\n  const finishedTomatoesByDay = groupByDay(finishedTomatoes, 'started_at');\r\n  const finishedDates = Object.keys(finishedTomatoesByDay).sort((a, b) => (Date.parse(b) - Date.parse(a)));\r\n  const finishedDatesByPage = groupByLength(finishedDates, 5);\r\n  return {\r\n    abortedTomatoes,\r\n    abortedTomatoesByPage,\r\n    finishedTomatoesByDay,\r\n    finishedDates,\r\n    finishedDatesByPage,\r\n    ...ownProps\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n  addTomato: actions.addTomato,\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(TomatoHistory);","import React from 'react';\n\nimport {connect} from 'react-redux';\nimport {TODO_FILTERS, TOMATO_FILTERS} from '../../constants';\nimport {getTodosByFilter, getTomatoesByFilter, groupByDay} from '../../redux/selectors';\n\nimport Graph from './Graph/Graph';\nimport TodoHistory from './TodoHistory/TodoHistory';\nimport TomatoHistory from './TomatoHistory/TomatoHistory';\n\nimport './Statistics.less';\n\ninterface IStatisticsState {\n  currentIndex: string,\n  graphWidth: number,\n  graphHeight: number\n}\n\ninterface IStatisticsProps {\n  todos: any[],\n  completedTodos: any[],\n  completedTodosByDay: any,\n  finishedTomatoes: any[],\n  finishedTomatoesByDay: any\n}\n\nclass Statistics extends React.Component<IStatisticsProps, IStatisticsState> {\n\n  constructor(props: IStatisticsProps) {\n    super(props);\n    let graphWidth = (document.body.clientWidth - 32) / 2;\n    let graphHeight = 70;\n    if (document.body.clientWidth >= 500) {\n      graphWidth = 240;\n      graphHeight = 60;\n    }\n    this.state = {\n      currentIndex: '1',\n      graphWidth,\n      graphHeight\n    };\n  }\n\n  onClick = (e: any) => {\n    this.setState({currentIndex: e.currentTarget.getAttribute('data-index')});\n  };\n\n  public render() {\n\n    let HistoryDetails: any;\n    switch (this.state.currentIndex) {\n      case '1':\n        HistoryDetails = <TomatoHistory/>;\n        break;\n      case '2':\n        HistoryDetails = <TodoHistory/>;\n    }\n\n    const HistoryGraphs = (\n      <ul>\n        <li\n          className={`statistics-item ${this.state.currentIndex === '1' ? 'active' : ''}`}\n          onClick={this.onClick}\n          data-index=\"1\">\n          <div className=\"text\">\n            <p>番茄历史</p>\n            <p>累计完成番茄</p>\n            <p>{this.props.finishedTomatoes.length}</p>\n          </div>\n          <Graph\n            data={this.props.finishedTomatoesByDay}\n            totalFinishCount={this.props.finishedTomatoes.length}\n            width={this.state.graphWidth} height={this.state.graphHeight}/>\n        </li>\n        <li\n          className={`statistics-item ${this.state.currentIndex === '2' ? 'active' : ''}`}\n          onClick={this.onClick}\n          data-index=\"2\">\n          <div className=\"text\">\n            <p>任务历史</p>\n            <p>累计完成任务</p>\n            <p>{this.props.completedTodos.length}</p>\n          </div>\n          <Graph\n            data={this.props.completedTodosByDay}\n            totalFinishCount={this.props.completedTodos.length}\n            width={this.state.graphWidth} height={this.state.graphHeight}/>\n        </li>\n      </ul>\n    );\n\n    return (\n      <div className=\"statistics\">\n        {\n          HistoryGraphs\n        }\n        <div className=\"history-details\">\n          {\n            HistoryDetails\n          }\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state: any, ownProps: any) => {\n  const todos = state.todos;\n  const completedTodos = getTodosByFilter(state, TODO_FILTERS.COMPLETED);\n  const completedTodosByDay = groupByDay(completedTodos, 'completed_at');\n  const finishedTomatoes = getTomatoesByFilter(state, TOMATO_FILTERS.FINISHED);\n  const finishedTomatoesByDay = groupByDay(finishedTomatoes, 'ended_at');\n  return {\n    todos,\n    completedTodos,\n    completedTodosByDay,\n    finishedTomatoes,\n    finishedTomatoesByDay,\n    ...ownProps\n  };\n};\n\nexport default connect(mapStateToProps)(Statistics);","import React from 'react';\nimport {useHistory} from 'react-router-dom';\nimport {connect} from 'react-redux';\nimport actions from '../../redux/actions';\nimport axios from '../../config/axios';\n\nimport Todos from '../../components/Todos/Todos';\nimport Tomatoes from '../../components/Tomatoes/Tomatoes';\nimport Statistics from '../../components/Statistics/Statistics';\n\nimport {Dropdown, Menu, Icon, message} from 'antd';\nimport './Home.less';\nimport logo from '../../assets/images/logo.png'\n\ninterface IHomeProps {\n  initTodos: (payload: any) => {\n    type: string,\n    payload: any\n  },\n  initTomatoes: (payload: any) => {\n    type: string,\n    payload: any\n  },\n}\n\nconst Home = (props: IHomeProps) => {\n  const [user, setUser] = React.useState<any>({});\n  let history = useHistory();\n\n  React.useEffect(() => {\n    const getMe = async () => {\n      try {\n        const response = await axios.get('me');\n        setUser(response.data);\n      } catch (e) {\n        if(e.response.status === 401) {\n        } else {\n          message.error('网络好像有点不太好哦，一会儿再试吧');\n        }\n      }\n    };\n    const getTodos = async () => {\n      try {\n        const response = await axios.get('todos');\n        const todos = response.data.resources.map((todo: any) => Object.assign({}, todo, {editing: false}));\n        props.initTodos(todos);\n      } catch (e) {\n        if(e.response.status === 401) {\n        } else {\n          message.error('网络好像有点不太好哦，一会儿再试吧');\n        }\n      }\n    };\n    const getTomatoes = async () => {\n      try {\n        const response = await axios.get('tomatoes');\n        props.initTomatoes(response.data.resources);\n      } catch (e) {\n        if(e.response.status === 401) {\n        } else {\n          message.error('网络好像有点不太好哦，一会儿再试吧');\n        }\n      }\n    };\n    getMe();\n    getTodos();\n    getTomatoes();\n  }, [props]);\n\n  const onLogout = () => {\n    localStorage.setItem('x-token', '');\n    history.push('/login');\n  };\n\n  const menu = () => {\n    return (\n      <Menu>\n        <Menu.Item key=\"1\" onClick={onLogout}>\n          <Icon type=\"logout\"/>\n          注销\n        </Menu.Item>\n      </Menu>\n    );\n  };\n\n  return (\n    <div id=\"home\">\n      <header>\n        <div className=\"logo\">\n          <img src={logo} alt=\"logo\"/>\n        </div>\n        <Dropdown overlay={menu}>\n          <div>\n            <span className=\"user\">{user && user.account}</span> <Icon type=\"down\"/>\n          </div>\n        </Dropdown>\n      </header>\n      <main>\n        <Tomatoes/>\n        <Todos/>\n      </main>\n      <Statistics/>\n    </div>\n  );\n};\n\nconst mapStateToProps = (state: any, ownProps: any) => ({\n  ...ownProps\n});\n\nconst mapDispatchToProps = {\n  initTodos: actions.initTodos,\n  initTomatoes: actions.initTomatoes\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Home);","import React from 'react';\nimport {Input, Button, message} from 'antd';\nimport axios from '../../config/axios';\nimport {Link, useHistory} from 'react-router-dom';\nimport './Login.less';\n\nexport default function () {\n  const [account, setAccount] = React.useState();\n  const [password, setPassword] = React.useState();\n  let history = useHistory();\n\n  const onLogin = async () => {\n    try {\n      await axios.post('sign_in/user', {\n        account,\n        password,\n      });\n      history.push('/');\n    } catch (e) {\n      if(e.response.status === 422) {\n        message.warning('用户名或密码错误，请重新输入');\n      } else {\n        message.error('网络好像有点不太好哦，一会儿再试吧');\n      }\n    }\n  };\n\n  const onKeyUp = (e: any) => {\n    if (e.keyCode === 13) {\n      if (inputCheck()) {\n        onLogin();\n      }\n    }\n  };\n\n  const onClick = () => {\n    if (inputCheck()) {\n      onLogin();\n    }\n  };\n\n  const inputCheck = () => {\n    if (account === '') {\n      message.warning('用户名不能为空哦');\n      return false;\n    }\n    if (password === '') {\n      message.warning('密码不能为空哦');\n      return false;\n    }\n    return true;\n  };\n\n  return (\n    <div id=\"login\">\n      <h1>欢迎登录番茄闹钟</h1>\n      <Input\n        placeholder=\"请输入用户名\"\n        value={account}\n        onChange={(e) => setAccount(e.target.value)}\n      />\n      <Input.Password\n        placeholder=\"请输入密码\"\n        value={password}\n        onChange={(e) => setPassword(e.target.value)}\n        onKeyUp={onKeyUp}\n      />\n      <Button\n        type=\"primary\"\n        onClick={onClick}\n      >登录</Button>\n      <p>如果还没有账号，请<Link to='/register'>点击这里注册</Link></p>\n    </div>\n  );\n}","import React from 'react';\nimport axios from '../../config/axios';\nimport {Link, useHistory} from 'react-router-dom';\n\nimport {Input, Button, message} from 'antd';\nimport './Register.less';\n\nexport default function () {\n  const [account, setAccount] = React.useState();\n  const [password, setPassword] = React.useState();\n  const [passwordConfirmation, setPasswordConfirmation] = React.useState();\n  let history = useHistory();\n\n  const onRegister = async () => {\n    try {\n      await axios.post('sign_up/user', {\n        account,\n        password,\n        password_confirmation: passwordConfirmation\n      });\n      history.push('/');\n    } catch (e) {\n      if(e.response.status === 422) {\n        message.warning('用户已存在，请换一个用户名再尝试');\n      } else {\n        message.warning('网络错误，请稍后再试');\n      }\n    }\n  };\n\n  const onKeyUp = (e: any) => {\n    if (e.keyCode === 13) {\n      if (inputCheck()) {\n        onRegister();\n      }\n    }\n  };\n\n  const onClick = () => {\n    if (inputCheck()) {\n      onRegister();\n    }\n  };\n\n  const inputCheck = () => {\n    if (account === '') {\n      message.warning('用户名不能为空哦');\n      return false;\n    }\n    if (password === '') {\n      message.warning('密码不能为空哦');\n      return false;\n    }\n    if (passwordConfirmation !== password) {\n      message.warning('两次输入的密码不一致，请重新输入');\n      return false;\n    }\n    return true;\n  };\n\n  return (\n    <div id=\"register\">\n      <h1>注册一个番茄账号</h1>\n      <Input\n        placeholder=\"请输入用户名\"\n        value={account}\n        onChange={(e) => setAccount(e.target.value)}\n      />\n      <Input.Password\n        placeholder=\"请输入密码\"\n        value={password}\n        onChange={(e) => setPassword(e.target.value)}\n      />\n      <Input.Password\n        placeholder=\"再输入一遍密码\"\n        value={passwordConfirmation}\n        onChange={(e) => setPasswordConfirmation(e.target.value)}\n        onKeyUp={onKeyUp}\n      />\n      <Button\n        type=\"primary\"\n        onClick={onClick}\n      >注册</Button>\n      <p>如果已经有账号了，请<Link to='/login'>点击这里登录</Link></p>\n    </div>\n  );\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport moment from 'moment';\nimport 'moment/locale/zh-cn';\nimport {Provider} from 'react-redux';\nimport store from './redux/store';\n\nimport App from './App';\n\nimport * as serviceWorker from './serviceWorker';\nimport './index.less';\n\nmoment.locale('zh-cn');\n\nReactDOM.render(\n  <Provider store={store}>\n    <App/>\n  </Provider>,\n  document.getElementById('root'));\n\n\nserviceWorker.unregister();\n","import React from 'react';\nimport {\n  HashRouter,\n  Switch,\n  Route\n} from 'react-router-dom';\nimport Home from './pages/Home/Home'\nimport Login from './pages/Login/Login'\nimport Register from './pages/Register/Register'\n\nexport default function App() {\n  return (\n    <HashRouter>\n      <Switch>\n        <Route path='/login'>\n          <Login/>\n        </Route>\n        <Route path='/register'>\n          <Register/>\n        </Route>\n        <Route path='/'>\n          <Home/>\n        </Route>\n      </Switch>\n    </HashRouter>\n  );\n}"],"sourceRoot":""}