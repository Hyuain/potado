{"version":3,"sources":["assets/images/logo.png","redux/reducers/index.ts","redux/reducers/todos.ts","redux/actionTypes.ts","redux/reducers/tomatoes.ts","redux/store.ts","redux/actions/todos.ts","redux/actions/tomatoes.ts","redux/actions/index.ts","api/history.ts","api/axios.ts","components/Tomatoes/CountDown/index.tsx","redux/selectors.ts","components/Todos/TodoInput/index.tsx","components/Todos/TodoItem/index.tsx","applications/Todos/index.tsx","components/Tomatoes/TomatoAction/index.tsx","components/Tomatoes/TomatoList/index.tsx","api/utils.tsx","applications/Tomatoes/index.tsx","components/Statistics/HistoryGraph/index.tsx","components/Statistics/TodoHistoryItem/index.tsx","components/Statistics/TomatoHistoryItem/index.tsx","components/Statistics/CompletedList/index.tsx","components/Statistics/AbortedList/index.tsx","components/Statistics/AddTomato/index.tsx","components/Statistics/HistoryDetails/index.tsx","applications/Statisitics/index.tsx","pages/Home/index.tsx","pages/Login/index.tsx","pages/Register/index.tsx","serviceWorker.ts","index.tsx","App.tsx"],"names":["module","exports","rootReducer","combineReducers","todos","state","action","type","payload","map","todo","id","Object","assign","editing","tomatoes","tomato","store","createStore","addTodo","initTodos","updateTodo","editTodo","addTomato","initTomatoes","updateTomato","history","createHashHistory","instance","axios","create","baseURL","headers","interceptors","request","use","config","xToken","localStorage","getItem","error","console","Promise","reject","response","setItem","status","push","timerID","getTodos","getNotDeletedTodos","filter","deleted","getCompletedTodos","completed","getTomatoes","getFinishedTomatoes","description","ended_at","aborted","TodoInput","props","React","useState","setDescription","inputCheck","message","warning","a","async","post","data","resource","EnterIcon","onClick","className","placeholder","suffix","value","onChange","e","target","onKeyUp","keyCode","TodoItem","textContent","setTextContent","params","completed_at","Date","toISOString","put","EditField","theme","Text","onDoubleClick","todoItemClass","classNames","checked","connect","ownProps","incompleteTodos","getIncompleteTodos","dispatch","actions","key","CountDown","startCountDown","setInterval","restTime","setState","document","title","clock","onTimeOver","onFinish","clearInterval","this","percent","duration","style","width","minutes","Math","floor","seconds","toString","padStart","Component","confirm","TomatoAction","startTomato","onClickCancel","okText","cancelText","onOk","abortTomato","unfinishedTomato","forceUpdate","addDescription","Html","undefined","startAt","parse","started_at","timeNow","getTime","TomatoItem","moment","format","TomatoList","List","dates","date","finishedTomatoes","Title","length","Details","keys","sort","b","splice","weekTimeTable","getFriendlyDate","method","momentDate","monthAndDay","weekTime","groupByLength","array","result","i","slice","groupByDay","dataBeforeGroup","keyOfTime","_","groupBy","item","getUnfinishedTomato","finishedTomatoesByDay","Graph","fill","stroke","strokeWidth","points","height","firstDay","range","finishedCount","pointArray","x","y","totalFinishCount","join","genPoints","TodoHistoryItem","Time","created_at","Action","TomatoHistoryItem","submitChange","onKeyup","Description","CompletedList","tomatoData","tomatoesGroup","totalTime","reduce","time","hours","getFriendlyTime","todoData","todosGroup","AbortedList","AddTomato","startedAt","setStartedAt","visible","setVisible","endedAt","clone","add","manually_created","onCancel","locale","showTime","content","icon","TabPane","HistoryDetails","tomatoAbortedCurrent","tomatoCompletedCurrent","todoAbortedCurrent","todoCompletedCurrent","CompletedListWrapper","AbortedListWrapper","finishedTomatoesDatesByPage","completedTodosDatesByPage","completedTodosByDay","tab","total","current","pageSize","abortedTomatoesByPage","abortedTomatoes","completedTodosDates","deletedTodosByPage","deletedTodos","finishedTomatoesDates","getDeletedTodos","completedTodos","getAbortedTomatoes","Statistics","currentIndex","currentTarget","getAttribute","graphWidth","body","clientWidth","graphHeight","HistoryGraphs","data-index","HistoryGraph","account","user","setUser","useHistory","useEffect","get","getMe","resources","onLogout","src","logo","alt","overlay","Item","Login","setAccount","password","setPassword","onLogin","Password","to","Register","passwordConfirmation","setPasswordConfirmation","onRegister","password_confirmation","Boolean","window","location","hostname","match","ReactDOM","render","path","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.b50c6a56.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.79967085.png\";","import {combineReducers} from 'redux';\r\nimport todos from './todos';\r\nimport tomatoes from './tomatoes';\r\n\r\nconst rootReducer = combineReducers({\r\n  todos,\r\n  tomatoes\r\n});\r\n\r\nexport default rootReducer;\r\n\r\nexport type RootState = ReturnType<typeof rootReducer>;","import {ADD_TODO, INIT_TODOS, UPDATE_TODO, EDIT_TODO} from '../actionTypes';\r\n\r\ninterface AddTodoAction {\r\n  type: typeof ADD_TODO\r\n  payload: Todo\r\n}\r\n\r\ninterface InitTodosAction {\r\n  type: typeof INIT_TODOS\r\n  payload: Todo[]\r\n}\r\n\r\ninterface UpdateTodoAction {\r\n  type: typeof UPDATE_TODO\r\n  payload: Todo\r\n}\r\n\r\ninterface EditTodoAction {\r\n  type: typeof EDIT_TODO\r\n  payload: number\r\n}\r\n\r\ntype TodosActionTypes = AddTodoAction | InitTodosAction | UpdateTodoAction | EditTodoAction\r\n\r\nexport default function (state: Todo[] = [], action: TodosActionTypes) {\r\n  switch (action.type) {\r\n    case ADD_TODO:\r\n      return [action.payload, ...state];\r\n    case INIT_TODOS:\r\n      return [...action.payload];\r\n    case UPDATE_TODO:\r\n      return state.map(todo => {\r\n        if (todo.id === action.payload.id) {\r\n          return action.payload;\r\n        } else {\r\n          return todo;\r\n        }\r\n      });\r\n    case EDIT_TODO:\r\n      return state.map(todo => {\r\n        if (todo.id === action.payload) {\r\n          return Object.assign({}, todo, {editing: true});\r\n        } else {\r\n          return Object.assign({}, todo, {editing: false});\r\n        }\r\n      });\r\n    default:\r\n      return state;\r\n  }\r\n}","export const ADD_TODO = 'ADD_TODO';\r\nexport const INIT_TODOS = 'INIT_TODOS';\r\nexport const UPDATE_TODO = 'UPDATE_TODO';\r\nexport const EDIT_TODO = 'EDIT_TODO';\r\nexport const ADD_TOMATO = 'ADD_TOMATO';\r\nexport const INIT_TOMATOES = 'INIT_TOMATOES';\r\nexport const UPDATE_TOMATO = 'UPDATE_TOMATO';\r\n","import {ADD_TOMATO, INIT_TOMATOES, UPDATE_TOMATO} from '../actionTypes';\r\n\r\ninterface AddTomatoAction {\r\n  type: typeof ADD_TOMATO\r\n  payload: Tomato\r\n}\r\n\r\ninterface InitTomatoesAction {\r\n  type: typeof INIT_TOMATOES\r\n  payload: Tomato[]\r\n}\r\n\r\ninterface UpdateTomatoAction {\r\n  type: typeof UPDATE_TOMATO\r\n  payload: Tomato\r\n}\r\n\r\ntype TomatoesActionTypes = AddTomatoAction | InitTomatoesAction | UpdateTomatoAction\r\n\r\nexport default function (state: Tomato[] = [], action: TomatoesActionTypes) {\r\n  switch (action.type) {\r\n    case ADD_TOMATO:\r\n      return [action.payload, ...state];\r\n    case INIT_TOMATOES:\r\n      return [...action.payload];\r\n    case UPDATE_TOMATO:\r\n      return state.map(tomato => {\r\n      if (tomato.id === action.payload.id) {\r\n        return action.payload;\r\n      } else {\r\n        return tomato;\r\n      }\r\n    });\r\n    default:\r\n      return state;\r\n  }\r\n}","import {createStore} from 'redux';\r\nimport rootReducer from './reducers'\r\n\r\nconst store = createStore(rootReducer);\r\n\r\nexport default store","import {ADD_TODO, INIT_TODOS, UPDATE_TODO, EDIT_TODO} from '../actionTypes';\r\n\r\nconst addTodo = (payload: Todo) => {\r\n  return {\r\n    type: ADD_TODO,\r\n    payload\r\n  };\r\n};\r\n\r\nconst initTodos = (payload: Todo[]) => {\r\n  return {\r\n    type: INIT_TODOS,\r\n    payload\r\n  };\r\n};\r\n\r\nconst updateTodo = (payload: Todo) => {\r\n  return {\r\n    type: UPDATE_TODO,\r\n    payload\r\n  };\r\n};\r\n\r\nconst editTodo = (payload: number) => {\r\n  return {\r\n    type: EDIT_TODO,\r\n    payload\r\n  };\r\n};\r\n\r\nexport default {\r\n  addTodo,\r\n  initTodos,\r\n  updateTodo,\r\n  editTodo\r\n}","import {ADD_TOMATO, INIT_TOMATOES, UPDATE_TOMATO} from '../actionTypes';\r\n\r\nconst addTomato = (payload: Tomato) => {\r\n  return {\r\n    type: ADD_TOMATO,\r\n    payload\r\n  };\r\n};\r\n\r\nconst initTomatoes = (payload: Tomato[]) => {\r\n  return {\r\n    type: INIT_TOMATOES,\r\n    payload\r\n  };\r\n};\r\n\r\nconst updateTomato = (payload: Tomato) => {\r\n  return {\r\n    type: UPDATE_TOMATO,\r\n    payload\r\n  };\r\n};\r\n\r\nexport default {\r\n  addTomato,\r\n  initTomatoes,\r\n  updateTomato\r\n};","import todos from './todos';\r\nimport tomatoes from './tomatoes';\r\n\r\n\r\nexport default {\r\n  ...todos,\r\n  ...tomatoes\r\n};","import {createHashHistory} from 'history';\n\nconst history = createHashHistory();\n\nexport default history;","import axios from 'axios';\nimport history from './history';\n\nconst appId = 'nM5mG7x9MSDwWD4NMoNCLYE4';\nconst appSecret = 'VAAyTtmgzQhn4rks36XBYQfi';\n\nconst instance = axios.create({\n  baseURL: 'https://gp-server.hunger-valley.com/',\n  headers: {\n    't-app-id': appId,\n    't-app-secret': appSecret\n  }\n});\n\ninstance.interceptors.request.use((config) => {\n  const xToken = localStorage.getItem('x-token');\n  if (xToken) {\n    config.headers['Authorization'] = `Bearer ${xToken}`;\n  }\n  return config;\n}, (error) => {\n  console.error(error);\n  return Promise.reject(error);\n});\n\ninstance.interceptors.response.use((response) => {\n  if (response.headers['x-token']) {\n    localStorage.setItem('x-token', response.headers['x-token']);\n  }\n  return response;\n}, (error) => {\n  if(error.response.status === 401){\n    history.push('/login')\n  }\n  return Promise.reject(error);\n});\n\nexport default instance;","import React from 'react';\nimport './style.less';\n\ninterface ICountDownProps {\n  restTime: number,\n  duration: number,\n  onFinish: () => void\n}\n\ninterface IContDownStates {\n  restTime: number\n}\n\nlet timerID: NodeJS.Timeout;\n\nclass CountDown extends React.Component <ICountDownProps, IContDownStates> {\n\n  constructor(props: ICountDownProps) {\n    super(props);\n    this.state = {\n      restTime: this.props.restTime\n    };\n  };\n\n  componentDidMount(): void {\n    this.startCountDown();\n  };\n\n  componentWillUnmount(): void {\n    this.onTimeOver();\n  };\n\n  get clock() {\n    const minutes = Math.floor(this.state.restTime / 1000 / 60);\n    const seconds = Math.floor(this.state.restTime / 1000 % 60);\n    return `${minutes.toString().padStart(2, '0')}:${seconds.toString().padStart(2, '0')}`;\n  };\n\n  startCountDown = () => {\n    timerID = setInterval(() => {\n      const restTime = this.state.restTime;\n      this.setState({restTime: restTime - 1000});\n      document.title = `${this.clock} - 有一个番茄正在进行`;\n      if (restTime < 1000) {\n        this.onTimeOver();\n      }\n    }, 1000);\n  };\n\n  onTimeOver = () => {\n    this.props.onFinish();\n    clearInterval(timerID);\n  };\n\n  public render() {\n    const percent = 1 - this.state.restTime / this.props.duration;\n    return (\n      <div className=\"count-down\">\n        <span>{this.clock}</span>\n        <div className=\"progress-bar\" style={{width: `${percent * 100}%`}}></div>\n      </div>\n    );\n  }\n}\n\nexport default CountDown;","import {RootState} from '@/redux/reducers';\n\nexport const getTodos = (state: RootState) => (state.todos);\n\nexport const getNotDeletedTodos = (state: RootState) => {\n  const allTodos = getTodos(state);\n  return allTodos.filter((todo) => (!todo.deleted));\n};\n\nexport const getDeletedTodos = (state: RootState) => {\n  const allTodos = getTodos(state);\n  return allTodos.filter((todo) => (todo.deleted));\n};\n\nexport const getCompletedTodos = (state: RootState) => {\n  const notDeletedTodos = getNotDeletedTodos(state);\n  return notDeletedTodos.filter((todo) => (todo.completed));\n};\n\nexport const getIncompleteTodos = (state: RootState) => {\n  const notDeletedTodos = getNotDeletedTodos(state);\n  return notDeletedTodos.filter((todo) => (!todo.completed));\n};\n\nexport const getTomatoes = (state: RootState) => (state.tomatoes);\n\nexport const getFinishedTomatoes = (state: RootState) => {\n  const allTomatoes = getTomatoes(state);\n  return allTomatoes.filter((tomato) => (tomato.description && tomato.ended_at && !tomato.aborted));\n};\n\nexport const getUnfinishedTomato = (state: RootState) => {\n  const allTomatoes = getTomatoes(state);\n  return allTomatoes.filter((tomato) => (!tomato.description && !tomato.ended_at && !tomato.aborted))[0];\n};\n\nexport const getAbortedTomatoes = (state: RootState) => {\n  const allTomatoes = getTomatoes(state);\n  return allTomatoes.filter((tomato) => (!tomato.ended_at && tomato.aborted));\n};\n\n","import React from 'react';\r\nimport axios from '@/api/axios';\r\nimport {Input, Icon, message} from 'antd';\r\nimport './style.less';\r\n\r\ninterface ITodoInputProps {\r\n  addTodo: (payload: Todo) => void\r\n}\r\n\r\nconst TodoInput = (props: ITodoInputProps) => {\r\n  const [description, setDescription] = React.useState<string>('');\r\n\r\n  const onKeyUp = (e: React.KeyboardEvent) => {\r\n    if (e.keyCode === 13) {\r\n      if (inputCheck()) {\r\n        addTodo();\r\n      }\r\n    }\r\n  };\r\n\r\n  const onClick = () => {\r\n    if (inputCheck()) {\r\n      addTodo();\r\n    }\r\n  };\r\n\r\n  const inputCheck = () => {\r\n    if (description === '') {\r\n      message.warning('还是说点儿什么吧');\r\n      return false;\r\n    }\r\n    return true;\r\n  };\r\n\r\n  const addTodo = async () => {\r\n    try {\r\n      const response = await axios.post<TodoUpdateResponse>('todos', {description});\r\n      setDescription('');\r\n      props.addTodo(response.data.resource);\r\n    } catch (e) {\r\n      message.error('网络好像有点不太好哦，一会儿再试吧');\r\n    }\r\n  };\r\n\r\n  const EnterIcon = description ? <Icon type=\"enter\" onClick={onClick}/> : <span/>;\r\n\r\n  return (\r\n    <div className=\"todo-input\">\r\n      <Input\r\n        placeholder=\"添加新任务\"\r\n        suffix={EnterIcon}\r\n        value={description}\r\n        onChange={e => {\r\n          setDescription(e.target.value);\r\n        }}\r\n        onKeyUp={onKeyUp}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TodoInput;","import React from 'react';\nimport axios from '@/api/axios';\nimport classNames from 'classnames';\n\nimport {Checkbox, Icon, message} from 'antd';\nimport './style.less';\n\ninterface ITodoItemProps extends Todo {\n  updateTodo: (payload: Todo) => void\n  editTodo: (id: number) => void\n}\n\nconst TodoItem = (props: ITodoItemProps) => {\n\n  const [textContent, setTextContent] = React.useState<string>(props.description);\n\n  const onClickEnter = () => {\n    if (inputCheck()) {\n      updateTodo({description: textContent});\n    }\n  };\n\n  const onClickDelete = () => {\n    updateTodo({deleted: true});\n  };\n\n  const onKeyUp = (e: React.KeyboardEvent) => {\n    if (e.keyCode === 13) {\n      if (inputCheck()) {\n        updateTodo({description: textContent});\n      }\n    }\n  };\n\n  const inputCheck = () => {\n    if (textContent === '') {\n      message.warning('还是说点儿什么吧');\n      return false;\n    }\n    return true;\n  };\n\n  const updateTodo = async (params: TodoUpdateParams) => {\n    if (params.completed) {\n      params.completed_at = new Date().toISOString();\n    }\n    try {\n      const response = await axios.put<TodoUpdateResponse>(`todos/${props.id}`, params);\n      props.updateTodo(response.data.resource);\n    } catch (e) {\n      message.error('网络好像有点不太好哦，一会儿再试吧');\n    }\n  };\n\n  const editTodo = () => {\n    props.editTodo(props.id);\n  };\n\n  const EditField = (\n    <div className=\"edit-filed\">\n      <input type=\"text\"\n             value={textContent}\n             onChange={(e) => {\n               setTextContent(e.target.value);\n             }}\n             onKeyUp={onKeyUp}\n      />\n      <div className=\"icon-wrapper\">\n        <Icon type=\"enter\" onClick={onClickEnter}/>\n        <Icon type=\"delete\" theme=\"filled\" onClick={onClickDelete}/>\n      </div>\n    </div>\n  );\n\n  const Text = (\n    <span className=\"text\" onDoubleClick={editTodo}>{textContent}</span>\n  );\n\n  const todoItemClass = classNames({\n    'todo-item': true,\n    'editing': props.editing,\n    'completed': props.completed\n  });\n\n  return (\n    <div className={todoItemClass}>\n      <Checkbox\n        checked={props.completed}\n        onChange={(e) => {\n          updateTodo({completed: e.target.checked});\n        }}\n      />\n      {props.editing ? EditField : Text}\n    </div>\n  );\n};\n\nexport default TodoItem;","import React from 'react';\nimport {connect} from 'react-redux';\nimport actions from '@/redux/actions';\nimport {RootState} from '@/redux/reducers';\nimport {Dispatch} from 'redux';\nimport {getIncompleteTodos} from '@/redux/selectors';\nimport TodoInput from '@/components/Todos/TodoInput';\nimport TodoItem from '@/components/Todos/TodoItem';\nimport './style.less';\n\ninterface ITodosProps {\n}\n\ntype ReduxType = ReturnType<typeof mapStateToProps> & ReturnType<typeof mapDispatchToProps>\n\nconst Todos = (props: ReduxType) => {\n\n  return (\n    <div className=\"todos\">\n      <TodoInput\n        addTodo={props.addTodo}\n      />\n      <div className=\"todo-list\">\n        {\n          props.incompleteTodos.map((todo: Todo) => (\n            <TodoItem\n              key={todo.id} {...todo}\n              updateTodo={props.updateTodo}\n              editTodo={props.editTodo}\n            />\n          ))\n        }\n      </div>\n    </div>\n  );\n};\n\nconst mapStateToProps = (state: RootState, ownProps: ITodosProps) => {\n  const incompleteTodos = getIncompleteTodos(state);\n  return {\n    incompleteTodos,\n    ...ownProps\n  };\n};\n\nconst mapDispatchToProps = (dispatch: Dispatch) => {\n  return {\n    addTodo(payload: Todo) {\n      dispatch(actions.addTodo(payload));\n    },\n    editTodo(payload: number) {\n      dispatch(actions.editTodo(payload));\n    },\n    updateTodo(payload: Todo) {\n      dispatch(actions.updateTodo(payload));\n    }\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Todos);","import React from 'react';\nimport axios from '@/api/axios';\nimport CountDown from '@/components/Tomatoes/CountDown';\nimport {Button, Icon, Input, message, Modal} from 'antd';\nimport './style.less';\n\nconst {confirm} = Modal;\n\ninterface ITomatoActionProps {\n  addTomato: (payload:Tomato) => void\n  updateTomato: (payload:Tomato)=>void\n  unfinishedTomato: Tomato\n}\n\ninterface ITomatoActionState {\n  description: string\n}\n\nclass TomatoAction extends React.Component<ITomatoActionProps, ITomatoActionState> {\n\n  constructor(props: ITomatoActionProps) {\n    super(props);\n    this.state = {\n      description: ''\n    };\n  }\n\n  startTomato = async () => {\n    try {\n      const response = await axios.post<TomatoUpdateResponse>('tomatoes', {duration: 25 * 60 * 1000});\n      this.props.addTomato(response.data.resource);\n    } catch (e) {\n      message.error('网络好像有点不太好哦，一会儿再试吧');\n    }\n  };\n\n  onClickCancel = () => {\n    confirm({\n      title: '您确定要放弃这个番茄吗？',\n      okText: '确认',\n      cancelText: '关闭',\n      onOk: () => {\n        this.abortTomato();\n      }\n    });\n  };\n\n  abortTomato = () => {\n    this.updateTomato({\n      aborted: true\n    });\n    document.title = 'Potado - 你的番茄土豆';\n  };\n\n  updateTomato = async (params: TomatoUpdateParams) => {\n    try {\n      const response = await axios.put<TomatoUpdateResponse>(`tomatoes/${this.props.unfinishedTomato.id}`, params);\n      this.props.updateTomato(response.data.resource);\n    } catch (e) {\n      message.error('网络好像有点不太好哦，一会儿再试吧');\n    }\n  };\n\n  onFinish = () => {\n    this.forceUpdate();\n    document.title = 'Potado - 你的番茄土豆';\n  };\n\n  onKeyUp = (e: React.KeyboardEvent) => {\n    if (e.keyCode === 13) {\n      if (this.inputCheck()) {\n        this.addDescription();\n      }\n    }\n  };\n\n  inputCheck = () => {\n    if (this.state.description === '') {\n      message.warning('还是说点儿什么吧');\n      return false;\n    }\n    return true;\n  };\n\n  addDescription = () => {\n    if (this.state.description === '') {\n      this.setState({description: '这是一个没有描述的番茄'});\n    }\n    this.updateTomato({\n      description: this.state.description,\n      ended_at: new Date().toISOString()\n    });\n    this.setState({description: ''});\n  };\n\n  public render() {\n    let Html: JSX.Element;\n    if (this.props.unfinishedTomato === undefined) {\n      Html = <Button className=\"start-button\" onClick={this.startTomato}>开始一个番茄</Button>;\n    } else {\n      const startAt = Date.parse(this.props.unfinishedTomato.started_at);\n      const duration = this.props.unfinishedTomato.duration;\n      const timeNow = new Date().getTime();\n      if (timeNow - startAt > duration) {\n        Html = (\n          <div className=\"input-wrapper\">\n            <Input\n              value={this.state.description}\n              placeholder=\"请输入刚刚完成的任务\"\n              onChange={(e) => {\n                this.setState({description: e.target.value});\n              }}\n              onKeyUp={this.onKeyUp}\n            />\n            <Icon\n              type=\"close-circle\"\n              className=\"abort\"\n              onClick={this.onClickCancel}\n            />\n          </div>\n        );\n      } else {\n        const restTime = duration - (timeNow - startAt);\n        Html = (\n          <div className=\"count-down-wrapper\">\n            <CountDown\n              restTime={restTime}\n              duration={duration}\n              onFinish={this.onFinish}\n            />\n            <Icon\n              type=\"close-circle\"\n              className=\"abort\"\n              onClick={this.onClickCancel}\n            />\n          </div>\n        );\n      }\n    }\n    return (\n      <div className=\"tomato-action\">\n        {Html}\n      </div>\n    );\n  }\n}\n\nexport default TomatoAction;","import React from 'react';\nimport moment from 'moment';\nimport './style.less';\n\nconst TomatoItem = (props: Tomato) => {\n  return (\n    <div className=\"tomato-item\">\n      <span\n        className=\"time-range\">{moment(props.started_at).format('HH:mm')} - {moment(props.ended_at).format('HH:mm')}</span>\n      <span className=\"description\">{props.description}</span>\n    </div>\n  );\n};\n\ninterface ITomatoListProps {\n  finishedTomatoes: TomatoesGroup\n}\n\nclass TomatoList extends React.Component<ITomatoListProps> {\n\n  get dates() {\n    const dates = Object.keys(this.props.finishedTomatoes);\n    return dates.sort((a, b) => Date.parse(b) - Date.parse(a)).splice(0, 3);\n  }\n\n  public render() {\n    const List = this.dates.map(date => {\n      const tomatoes = this.props.finishedTomatoes[date];\n      const Title = (\n        <div className=\"title\">\n          <span className=\"date-time\">{moment(date).format('M月D日')}</span>\n          <span className=\"finished-count\">完成了 {tomatoes.length} 个番茄</span>\n        </div>\n      );\n      const Details = (\n        <div className=\"details\">\n          {tomatoes.map((tomato: Tomato) => (<TomatoItem key={tomato.id} {...tomato}/>))}\n        </div>\n      );\n      return (\n        <div key={date} className=\"daily-tomatoes\">\n          {\n            Title\n          }\n          {\n            Details\n          }\n        </div>\n      );\n    });\n\n    return (\n      <div className=\"tomato-list\">\n        {\n          List\n        }\n      </div>\n    );\n  }\n}\n\nexport default TomatoList;","import moment from 'moment';\r\nimport _ from 'lodash';\r\n\r\ninterface IWeekTimeTable {\r\n  [key: string]: string\r\n}\r\n\r\nconst weekTimeTable: IWeekTimeTable = {\r\n  '1': '周一', '2': '周二', '3': '周三', '4': '周四', '5': '周五', '6': '周六', '7': '周日'\r\n};\r\n\r\nexport const getFriendlyDate = (date: string, method: string) => {\r\n  const momentDate = moment(date);\r\n  const monthAndDay = momentDate.format('M月D日');\r\n  const weekTime = momentDate.format('i');\r\n  switch (method) {\r\n    case 'monthAndDay':\r\n      return monthAndDay;\r\n    case 'dayOfWeek':\r\n      return weekTimeTable[weekTime];\r\n  }\r\n};\r\n\r\nexport const groupByLength = (array: any[], length: number) => {\r\n  const result = [];\r\n  for (let i = 0; i < array.length; i += length) {\r\n    result.push(array.slice(i, i + length));\r\n  }\r\n  return result;\r\n};\r\n\r\nexport const groupByDay = (dataBeforeGroup: any[], keyOfTime: string) => {\r\n  return _.groupBy(dataBeforeGroup, (item: any) => {\r\n    return moment(item[keyOfTime]).format('YYYY-MM-DD');\r\n  });\r\n};","import React from 'react';\nimport TomatoAction from '@/components/Tomatoes/TomatoAction';\nimport TomatoList from '@/components/Tomatoes/TomatoList';\nimport actions from '@/redux/actions';\nimport {connect} from 'react-redux';\nimport {getFinishedTomatoes, getUnfinishedTomato} from '@/redux/selectors';\nimport {groupByDay} from '@/api/utils';\nimport './style.less';\nimport {RootState} from '@/redux/reducers';\nimport {Dispatch} from 'redux';\n\ninterface ITomatoesProps {\n}\n\ntype ReduxType = ReturnType<typeof mapStateToProps> & ReturnType<typeof mapDispatchToProps>\n\nconst Tomatoes = (props: ReduxType) => {\n  return (\n    <div className=\"tomatoes\">\n      <TomatoAction\n        addTomato={props.addTomato}\n        updateTomato={props.updateTomato}\n        unfinishedTomato={props.unfinishedTomato}\n      />\n      <TomatoList\n        finishedTomatoes={props.finishedTomatoesByDay}\n      />\n    </div>\n  );\n};\n\nconst mapStateToProps = (state: RootState, ownProps: ITomatoesProps) => {\n  const tomatoes = state.tomatoes;\n  const finishedTomatoes = getFinishedTomatoes(state);\n  const unfinishedTomato = getUnfinishedTomato(state);\n  const finishedTomatoesByDay: TomatoesGroup = groupByDay(finishedTomatoes, 'started_at');\n  return {\n    tomatoes,\n    finishedTomatoes,\n    unfinishedTomato,\n    finishedTomatoesByDay,\n    ...ownProps\n  };\n};\n\nconst mapDispatchToProps = (dispatch: Dispatch) => {\n  return {\n    addTomato(payload: Tomato) {\n      dispatch(actions.addTomato(payload));\n    },\n    updateTomato(payload: Tomato) {\n      dispatch(actions.updateTomato(payload));\n    }\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Tomatoes);","import React from 'react';\n\ninterface IGraphProps {\n  data: TomatoesGroup | TodosGroup,\n  totalFinishCount: number,\n  width: number,\n  height: number\n}\n\nconst Graph = (props: IGraphProps) => {\n\n  const genPoints = (width: number, height: number) => {\n    const dates = Object.keys(props.data).sort((a, b) => Date.parse(a) - Date.parse(b));\n    const firstDay = Date.parse(dates[0]) - 24 * 60 * 60 * 1000;\n    if (firstDay) {\n      const lastDay = new Date().getTime();\n      const range = lastDay - firstDay;\n      let finishedCount = 0;\n      const pointArray = dates.map(date => {\n        let x = (Date.parse(date) - firstDay) / range * width;\n        if (range === 0) {\n          x = width;\n        }\n        finishedCount += props.data[date].length;\n        const y = (1 - finishedCount / props.totalFinishCount) * height;\n        return `${x},${y}`;\n      });\n      return [`0,${height}`, ...pointArray, `${width},0`,`${width},${height}`].join(' ');\n    } else {\n      return `0,${height} ${width},${height}`;\n    }\n  };\n\n  return (\n    <div className=\"graph\">\n      <svg>\n        <polygon fill=\"rgba(201,72,91,.1)\" stroke=\"rgba(201,72,91,.5)\" strokeWidth=\"1\"\n                 points={genPoints(props.width, props.height)}/>\n      </svg>\n    </div>\n  );\n};\n\nexport default Graph;","import React from 'react';\r\nimport moment from 'moment';\r\nimport axios from '@/api/axios';\r\nimport {getFriendlyDate} from '@/api/utils';\r\nimport {connect} from 'react-redux';\r\nimport actions from '@/redux/actions';\r\nimport {RootState} from '@/redux/reducers';\r\nimport {Dispatch} from 'redux';\r\nimport './style.less';\r\nimport {message} from 'antd';\r\n\r\n\r\ninterface ITodoHistoryItemProps {\r\n  todo: Todo\r\n  type: 'completed' | 'deleted'\r\n}\r\n\r\ntype ReduxType = ReturnType<typeof mapStateToProps> & ReturnType<typeof mapDispatchToProps>\r\n\r\nclass TodoHistoryItem extends React.Component<ReduxType> {\r\n\r\n  updateTodo = async (params: TodoUpdateParams) => {\r\n    try {\r\n      const response = await axios.put<TodoUpdateResponse>(`todos/${this.props.todo.id}`, params);\r\n      this.props.updateTodo(response.data.resource);\r\n    } catch (e) {\r\n      message.error('网络好像有点不太好哦，一会儿再试吧');\r\n    }\r\n  };\r\n\r\n  render() {\r\n    let Time = null;\r\n    if (this.props.type === 'completed') {\r\n      Time = (<span className=\"time\">{moment(this.props.todo.completed_at).format('HH:mm')}</span>);\r\n    } else if (this.props.type === 'deleted') {\r\n      Time = (<span className=\"time\">{getFriendlyDate(this.props.todo.created_at, 'monthAndDay')}</span>);\r\n    }\r\n\r\n    let Action = null;\r\n    if (this.props.type === 'completed') {\r\n      Action = (\r\n        <div className=\"action\">\r\n          <span onClick={() => this.updateTodo({completed: false})}>恢复</span>\r\n          <span onClick={() => this.updateTodo({deleted: true})}>删除</span>\r\n        </div>\r\n      );\r\n    } else if (this.props.type === 'deleted') {\r\n      Action = (\r\n        <div className=\"action\">\r\n          <span onClick={() => this.updateTodo({deleted: false})}>恢复</span>\r\n        </div>\r\n      );\r\n    }\r\n\r\n    return (\r\n      <div>\r\n        <div className=\"todo-history-item\">\r\n          <div className=\"text\">\r\n            {\r\n              Time\r\n            }\r\n            <span className=\"description\">{this.props.todo.description}</span>\r\n          </div>\r\n          {\r\n            Action\r\n          }\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state: RootState, ownProps: ITodoHistoryItemProps) => ({\r\n  ...ownProps\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch: Dispatch) => {\r\n  return {\r\n    updateTodo(payload: Todo) {\r\n      dispatch(actions.updateTodo(payload));\r\n    }\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(TodoHistoryItem);","import React from 'react';\r\nimport axios from '@/api/axios';\r\nimport {getFriendlyDate} from '@/api/utils';\r\nimport moment from 'moment';\r\nimport {connect} from 'react-redux';\r\nimport actions from '@/redux/actions';\r\nimport {Dispatch} from 'redux';\r\nimport {RootState} from '@/redux/reducers';\r\nimport {message} from 'antd';\r\nimport './style.less';\r\n\r\ninterface ITomatoHistoryItemProps {\r\n  type: 'finished' | 'aborted',\r\n  tomato: Tomato,\r\n}\r\n\r\ninterface ITomatoHistoryItemState {\r\n  editing: boolean\r\n  textContent: string\r\n}\r\n\r\ntype ReduxType = ReturnType<typeof mapStateToProps> & ReturnType<typeof mapDispatchToProps>\r\n\r\nclass TomatoHistoryItem extends React.Component<ReduxType, ITomatoHistoryItemState> {\r\n\r\n  constructor(props: ReduxType) {\r\n    super(props);\r\n    this.state = {\r\n      editing: false,\r\n      textContent: this.props.tomato.description || '这是一个没有描述的番茄'\r\n    };\r\n  }\r\n\r\n  updateTomato = async (params: TomatoUpdateParams) => {\r\n    try {\r\n      const response = await axios.put<TomatoUpdateResponse>(`tomatoes/${this.props.tomato.id}`, params);\r\n      this.props.updateTomato(response.data.resource);\r\n    } catch (e) {\r\n      message.error('网络好像有点不太好哦，一会儿再试吧');\r\n    }\r\n  };\r\n\r\n  submitChange = () => {\r\n    this.updateTomato({description: this.state.textContent});\r\n    this.setState({editing: false});\r\n  };\r\n\r\n  onKeyup = (e: React.KeyboardEvent) => {\r\n    if (e.keyCode === 13 && this.state.textContent !== '') {\r\n      this.submitChange();\r\n    }\r\n  };\r\n\r\n  render() {\r\n\r\n    const EditField = (\r\n      <div className=\"edit-filed\">\r\n        <input type=\"text\"\r\n               value={this.state.textContent}\r\n               onChange={(e) => {\r\n                 this.setState({textContent: e.target.value});\r\n               }}\r\n               onKeyUp={this.onKeyup}\r\n        />\r\n      </div>\r\n    );\r\n\r\n    const Description = (\r\n      <span className=\"description\">\r\n        {this.props.tomato.description || '这是一个没有描述的番茄'}\r\n      </span>\r\n    );\r\n\r\n    let Time = null;\r\n    if (this.props.type === 'finished') {\r\n      Time = (\r\n        <span className=\"time\">\r\n          {moment(this.props.tomato.started_at).format('HH:mm')} -\r\n          {moment(this.props.tomato.ended_at).format('HH:mm')}\r\n        </span>)\r\n      ;\r\n    } else if (this.props.type === 'aborted') {\r\n      Time = (<span className=\"time\">{getFriendlyDate(this.props.tomato.started_at, 'monthAndDay')}</span>);\r\n    }\r\n\r\n    let Action = null;\r\n    if (this.state.editing) {\r\n      Action = (\r\n        <div className=\"action\">\r\n          <span onClick={() => this.submitChange()}>提交</span>\r\n          <span onClick={() => this.setState({editing: false})}>取消</span>\r\n        </div>\r\n      );\r\n    } else {\r\n      if (this.props.type === 'finished') {\r\n        Action = (\r\n          <div className=\"action\">\r\n            <span onClick={() => this.setState({editing: true})}>编辑</span>\r\n            <span onClick={() => this.updateTomato({aborted: true})}>删除</span>\r\n          </div>\r\n        );\r\n      } else if (this.props.type === 'aborted') {\r\n        Action = (\r\n          <div className=\"action\">\r\n            <span onClick={() => this.setState({editing: true})}>编辑</span>\r\n          </div>\r\n        );\r\n      }\r\n    }\r\n    return (\r\n      <div>\r\n        <div className={`tomato-history-item ${this.state.editing ? 'editing' : ''}`}>\r\n          <div className=\"text\">\r\n            {\r\n              Time\r\n            }\r\n            {\r\n              this.state.editing ? EditField : Description\r\n            }\r\n          </div>\r\n          {\r\n            Action\r\n          }\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state: RootState, ownProps: ITomatoHistoryItemProps) => ({\r\n  ...ownProps\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch: Dispatch) => {\r\n  return {\r\n    updateTomato(payload: Tomato) {\r\n      dispatch(actions.updateTomato(payload));\r\n    }\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(TomatoHistoryItem);","import React from 'react';\r\nimport {getFriendlyDate} from '@/api/utils';\r\nimport TodoHistoryItem from '@/components/Statistics/TodoHistoryItem';\r\nimport TomatoHistoryItem from '@/components/Statistics/TomatoHistoryItem';\r\n\r\ninterface ICompletedListProps {\r\n  tomatoData?: {\r\n    dates: string[]\r\n    tomatoesGroup: TomatoesGroup\r\n  }\r\n  todoData?: {\r\n    dates: string[]\r\n    todosGroup: TodosGroup\r\n  }\r\n}\r\n\r\nconst CompletedList = (props: ICompletedListProps) => {\r\n\r\n  const getFriendlyTime = (time: number) => {\r\n    const seconds = Math.floor(time / 1000);\r\n    if (seconds < 60) return `${seconds} 秒`;\r\n    const minutes = Math.floor(seconds / 60);\r\n    if (minutes < 60) return `${minutes} 分钟`;\r\n    const hours = Math.floor(minutes / 60);\r\n    return `${hours} 小时 ${Math.floor(minutes % 60)} 分钟`;\r\n  };\r\n\r\n\r\n  if (props.tomatoData && props.tomatoData.dates && props.tomatoData.tomatoesGroup) {\r\n    const {dates,tomatoesGroup} = props.tomatoData;\r\n    return (\r\n      <div>\r\n        {\r\n          dates.map((date) => {\r\n            const tomatoes = tomatoesGroup[date];\r\n            const totalTime = tomatoes.reduce((totalTime: number, tomato: Tomato) => {\r\n              return totalTime + Date.parse(tomato.ended_at) - Date.parse(tomato.started_at);\r\n            }, 0);\r\n            return (\r\n              <div key={date} className=\"daily-tomatoes\">\r\n                <div className=\"title\">\r\n                  <p className=\"date\">\r\n                    <span className=\"date-time\">{getFriendlyDate(date, 'monthAndDay')}</span>\r\n                    <span className=\"week-time\">{getFriendlyDate(date, 'dayOfWeek')}</span>\r\n                  </p>\r\n                  <p className=\"finished-count\">完成了 {tomatoes.length} 个番茄</p>\r\n                  <p className=\"total-time\">总计 {getFriendlyTime(totalTime)}</p>\r\n                </div>\r\n                <div className=\"details\">\r\n                  {\r\n                    tomatoes.map((tomato) => (\r\n                      <TomatoHistoryItem key={tomato.id} tomato={tomato} type=\"finished\"/>))\r\n                  }\r\n                </div>\r\n              </div>\r\n            );\r\n          })\r\n        }\r\n      </div>\r\n    );\r\n  } else if (props.todoData && props.todoData.dates && props.todoData.todosGroup) {\r\n    const {dates,todosGroup} = props.todoData;\r\n    return (\r\n      <div>\r\n        {\r\n          dates.map((date: string) => {\r\n            const todos = todosGroup[date];\r\n            return (\r\n              <div key={date} className=\"daily-todos\">\r\n                <div className=\"title\">\r\n                  <p className=\"date\">\r\n                    <span className=\"date-time\">{getFriendlyDate(date, 'monthAndDay')}</span>\r\n                    <span className=\"week-time\">{getFriendlyDate(date, 'dayOfWeek')}</span>\r\n                  </p>\r\n                  <span className=\"finished-count\">完成了 {todos.length} 个任务</span>\r\n                </div>\r\n                <div className=\"details\">\r\n                  {\r\n                    todos.map((todo) => (<TodoHistoryItem key={todo.id} todo={todo} type=\"completed\"/>))\r\n                  }\r\n                </div>\r\n              </div>\r\n            );\r\n          })\r\n        }\r\n      </div>\r\n\r\n    );\r\n  } else {\r\n    return null;\r\n  }\r\n};\r\n\r\nexport default CompletedList;","import React from 'react';\r\nimport TodoHistoryItem from '@/components/Statistics/TodoHistoryItem';\r\nimport TomatoHistoryItem from '@/components/Statistics/TomatoHistoryItem';\r\n\r\ninterface IAbortedListProps {\r\n  tomatoes?: Tomato[]\r\n  todos?: Todo[]\r\n}\r\n\r\nconst AbortedList = (props: IAbortedListProps) => {\r\n  if (props.todos) {\r\n    return (\r\n      <div>\r\n        {\r\n          props.todos.map((todo) => (\r\n            <div key={todo.id}>\r\n              <TodoHistoryItem key={todo.id} todo={todo} type=\"deleted\"/>\r\n            </div>\r\n          ))\r\n        }\r\n      </div>\r\n    );\r\n  } else if (props.tomatoes) {\r\n    return (\r\n      <div>\r\n        {\r\n          props.tomatoes.map((tomato) => (\r\n            <div key={tomato.id}>\r\n              <TomatoHistoryItem key={tomato.id} tomato={tomato} type=\"aborted\"/>\r\n            </div>\r\n          ))\r\n        }\r\n      </div>\r\n    );\r\n  } else {\r\n    return null;\r\n  }\r\n};\r\n\r\nexport default AbortedList;","import React from 'react';\r\nimport axios from '@/api/axios';\r\nimport moment from 'moment';\r\nimport {Button, DatePicker, Input, Modal, Popover, message} from 'antd';\r\nimport locale from 'antd/es/date-picker/locale/zh_CN';\r\n\r\ninterface IAddTomatoProps {\r\n  addTomato: (payload: Tomato) => void\r\n}\r\n\r\nconst AddTomato = (props: IAddTomatoProps) => {\r\n  const [description, setDescription] = React.useState<string>('');\r\n  const [startedAt, setStartedAt] = React.useState<moment.Moment | null>(null);\r\n  const [visible, setVisible] = React.useState<boolean>(false);\r\n\r\n  const onKeyUp = (e: React.KeyboardEvent) => {\r\n    if (e.keyCode === 13) {\r\n      if (inputCheck()) {\r\n        addTomato();\r\n      }\r\n    }\r\n  };\r\n\r\n  const onConfirm = () => {\r\n    if (inputCheck()) {\r\n      addTomato();\r\n    }\r\n  };\r\n\r\n  const inputCheck = () => {\r\n    if (description === '') {\r\n      message.warning('还是说点儿什么吧');\r\n      return false;\r\n    }\r\n    if (!startedAt) {\r\n      message.warning('记得输入时间哦');\r\n      return false;\r\n    }\r\n    return true;\r\n  };\r\n\r\n  const addTomato = async () => {\r\n    if (description === '') {\r\n      setDescription('这是一个没有描述的番茄');\r\n    }\r\n    const endedAt = startedAt!.clone().add(25, 'minutes');\r\n    try {\r\n      const response = await axios.post<TomatoUpdateResponse>('tomatoes', {\r\n        started_at: startedAt!.toISOString(),\r\n        ended_at: endedAt.toISOString(),\r\n        description: description,\r\n        manually_created: true\r\n      });\r\n      setDescription('');\r\n      setStartedAt(null);\r\n      props.addTomato(response.data.resource);\r\n      setVisible(false);\r\n    } catch (e) {\r\n      message.error('网络好像有点不太好哦，一会儿再试吧');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Modal\r\n        title=\"补记一个番茄\"\r\n        visible={visible}\r\n        onOk={onConfirm}\r\n        onCancel={() => setVisible(false)}\r\n        okText=\"确认\"\r\n        cancelText=\"取消\"\r\n      >\r\n        <div className=\"add-modal-item\">\r\n          <span className=\"add-modal-label\">番茄的开始时间：</span>\r\n          <DatePicker\r\n            className=\"date-picker\"\r\n            locale={locale}\r\n            placeholder=\"\"\r\n            showTime\r\n            value={startedAt}\r\n            onOk={(value) => setStartedAt(value)}\r\n            onChange={(value) => setStartedAt(value)}\r\n          />\r\n        </div>\r\n        <div className=\"add-modal-item\">\r\n          <span className=\"add-modal-label\">番茄描述：</span>\r\n          <Input\r\n            type=\"text\"\r\n            value={description}\r\n            onChange={(e) => setDescription(e.target.value)}\r\n            onKeyUp={onKeyUp}\r\n          />\r\n        </div>\r\n      </Modal>\r\n      <Popover content=\"补记番茄\">\r\n        <Button onClick={() => setVisible(true)} icon=\"plus\"/>\r\n      </Popover>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AddTomato;","import React from 'react';\r\nimport {groupByLength, groupByDay} from '@/api/utils';\r\nimport {connect} from 'react-redux';\r\nimport {Dispatch} from 'redux';\r\nimport actions from '@/redux/actions';\r\nimport {getAbortedTomatoes, getCompletedTodos, getDeletedTodos, getFinishedTomatoes} from '@/redux/selectors';\r\nimport CompletedList from '@/components/Statistics/CompletedList';\r\nimport AbortedList from '@/components/Statistics/AbortedList';\r\nimport {RootState} from '@/redux/reducers';\r\nimport AddTomato from '@/components/Statistics/AddTomato';\r\nimport {Tabs, Pagination} from 'antd';\r\nimport './sytle.less';\r\n\r\nconst {TabPane} = Tabs;\r\n\r\ninterface IHistoryDetailsProps {\r\n  type: 'tomato' | 'todo'\r\n}\r\n\r\ninterface IHistoryDetailsState {\r\n  tomatoAbortedCurrent: number\r\n  tomatoCompletedCurrent: number\r\n  todoAbortedCurrent: number\r\n  todoCompletedCurrent: number\r\n}\r\n\r\ntype ReduxType = ReturnType<typeof mapStateToProps> & ReturnType<typeof mapDispatchToProps>\r\n\r\nclass HistoryDetails extends React.Component<ReduxType, IHistoryDetailsState> {\r\n\r\n  constructor(props: ReduxType) {\r\n    super(props);\r\n    this.state = {\r\n      tomatoAbortedCurrent: 1,\r\n      tomatoCompletedCurrent: 1,\r\n      todoAbortedCurrent: 1,\r\n      todoCompletedCurrent: 1\r\n    };\r\n  }\r\n\r\n  get completedTodosDates(): string[] {\r\n    return Object.keys(this.props.completedTodosByDay).sort((a, b) => (Date.parse(b) - Date.parse(a)));\r\n  };\r\n\r\n  get completedTodosDatesByPage(): string[][] {\r\n    return groupByLength(this.completedTodosDates, 5);\r\n  };\r\n\r\n  get finishedTomatoesDates(): string[] {\r\n    return Object.keys(this.props.finishedTomatoesByDay).sort((a, b) => (Date.parse(b) - Date.parse(a)));\r\n  }\r\n\r\n  get finishedTomatoesDatesByPage(): string[][] {\r\n    return groupByLength(this.finishedTomatoesDates, 5);\r\n  }\r\n\r\n  public render() {\r\n    const {type} = this.props;\r\n    const tomatoData = {\r\n      dates: this.finishedTomatoesDatesByPage[this.state.tomatoCompletedCurrent - 1],\r\n      tomatoesGroup: this.props.finishedTomatoesByDay\r\n    };\r\n    const todoData = {\r\n      dates: this.completedTodosDatesByPage[this.state.todoCompletedCurrent - 1],\r\n      todosGroup: this.props.completedTodosByDay\r\n    };\r\n    let CompletedListWrapper: JSX.Element;\r\n    let AbortedListWrapper: JSX.Element;\r\n    if (type === 'tomato') {\r\n      CompletedListWrapper = (\r\n        <TabPane className={'tomato-history-tab-pane'} tab=\"完成的番茄\" key=\"completedTomato\">\r\n          <AddTomato addTomato={this.props.addTomato}/>\r\n          <CompletedList tomatoData={tomatoData}/>\r\n          <Pagination\r\n            className=\"pagination\"\r\n            total={this.finishedTomatoesDatesByPage.length}\r\n            current={this.state.tomatoCompletedCurrent}\r\n            onChange={(current: number) => {\r\n              this.setState({tomatoCompletedCurrent: current});\r\n            }}\r\n            pageSize={5}\r\n          />\r\n        </TabPane>\r\n      );\r\n      AbortedListWrapper = (\r\n        <TabPane className=\"tomato-history-tab-pane\" tab=\"被打断的番茄\" key=\"abortedTomato\">\r\n          <AbortedList tomatoes={this.props.abortedTomatoesByPage[this.state.tomatoAbortedCurrent - 1]}/>\r\n          <Pagination\r\n            className=\"pagination\"\r\n            total={this.props.abortedTomatoes.length}\r\n            current={this.state.tomatoAbortedCurrent}\r\n            onChange={(current: number) => {\r\n              this.setState({tomatoAbortedCurrent: current});\r\n            }}\r\n            pageSize={10}\r\n          />\r\n        </TabPane>\r\n      );\r\n    } else {\r\n      CompletedListWrapper = (\r\n        <TabPane className={'todo-history-tab-pane'} tab=\"已完成的任务\" key=\"completedTodo\">\r\n          <CompletedList todoData={todoData}/>\r\n          <Pagination\r\n            className=\"pagination\"\r\n            total={this.completedTodosDates.length}\r\n            current={this.state.todoCompletedCurrent}\r\n            onChange={(current: number) => {\r\n              this.setState({todoCompletedCurrent: current});\r\n            }}\r\n            pageSize={5}\r\n          />\r\n        </TabPane>\r\n      );\r\n      AbortedListWrapper = (\r\n        <TabPane className=\"todo-history-tab-pane\" tab=\"已删除的任务\" key=\"abortedTodo\">\r\n          <AbortedList todos={this.props.deletedTodosByPage[this.state.todoAbortedCurrent - 1]}></AbortedList>\r\n          <Pagination\r\n            className=\"pagination\"\r\n            total={this.props.deletedTodos.length}\r\n            current={this.state.todoAbortedCurrent}\r\n            onChange={(current: number) => {\r\n              this.setState({todoAbortedCurrent: current});\r\n            }}\r\n            pageSize={10}\r\n          />\r\n        </TabPane>\r\n      );\r\n    }\r\n    return (\r\n      <div className={`${type}-history`}>\r\n        <Tabs className={`${type}-history-tabs`} type=\"card\">\r\n          {\r\n            CompletedListWrapper\r\n          }\r\n          {\r\n            AbortedListWrapper\r\n          }\r\n        </Tabs>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state: RootState, ownProps: IHistoryDetailsProps) => {\r\n  const deletedTodos = getDeletedTodos(state);\r\n  const deletedTodosByPage: Todo[][] = groupByLength(deletedTodos, 10);\r\n  const completedTodos = getCompletedTodos(state);\r\n  const completedTodosByDay: TodosGroup = groupByDay(completedTodos, 'completed_at');\r\n  const abortedTomatoes = getAbortedTomatoes(state);\r\n  const abortedTomatoesByPage: Tomato[][] = groupByLength(abortedTomatoes, 10);\r\n  const finishedTomatoes = getFinishedTomatoes(state);\r\n  const finishedTomatoesByDay: TomatoesGroup = groupByDay(finishedTomatoes, 'started_at');\r\n\r\n  return {\r\n    deletedTodos,\r\n    deletedTodosByPage,\r\n    completedTodosByDay,\r\n    abortedTomatoes,\r\n    abortedTomatoesByPage,\r\n    finishedTomatoesByDay,\r\n    ...ownProps\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch: Dispatch) => {\r\n  return {\r\n    addTomato(payload: Tomato) {\r\n      dispatch(actions.addTomato(payload));\r\n    }\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(HistoryDetails);","import React from 'react';\nimport {connect} from 'react-redux';\nimport {getCompletedTodos, getFinishedTomatoes} from '@/redux/selectors';\nimport {groupByDay} from '@/api/utils';\nimport HistoryGraph from '@/components/Statistics/HistoryGraph';\nimport HistoryDetails from '@/components/Statistics/HistoryDetails';\nimport './style.less';\nimport {RootState} from '@/redux/reducers';\n\ninterface IStatisticsState {\n  currentIndex: 'tomato' | 'todo',\n  graphWidth: number,\n  graphHeight: number\n}\n\ninterface IStatisticsProps {\n}\n\ntype ReduxType = ReturnType<typeof mapStateToProps>\n\nclass Statistics extends React.Component<ReduxType, IStatisticsState> {\n\n  constructor(props: ReduxType) {\n    super(props);\n    let graphWidth = (document.body.clientWidth - 32) / 2;\n    let graphHeight = 70;\n    if (document.body.clientWidth >= 500) {\n      graphWidth = 240;\n      graphHeight = 60;\n    }\n    this.state = {\n      currentIndex: 'tomato',\n      graphWidth,\n      graphHeight\n    };\n  }\n\n  onClick = (e: React.MouseEvent) => {\n    this.setState({currentIndex: e.currentTarget.getAttribute('data-index') as 'tomato' | 'todo'});\n  };\n\n  public render() {\n    const HistoryGraphs = (\n      <ul>\n        <li\n          className={`statistics-item ${this.state.currentIndex === 'tomato' ? 'active' : ''}`}\n          onClick={this.onClick}\n          data-index=\"tomato\">\n          <div className=\"text\">\n            <p>番茄历史</p>\n            <p>累计完成番茄</p>\n            <p>{this.props.finishedTomatoes.length}</p>\n          </div>\n          <HistoryGraph\n            data={this.props.finishedTomatoesByDay}\n            totalFinishCount={this.props.finishedTomatoes.length}\n            width={this.state.graphWidth} height={this.state.graphHeight}/>\n        </li>\n        <li\n          className={`statistics-item ${this.state.currentIndex === 'todo' ? 'active' : ''}`}\n          onClick={this.onClick}\n          data-index=\"todo\">\n          <div className=\"text\">\n            <p>任务历史</p>\n            <p>累计完成任务</p>\n            <p>{this.props.completedTodos.length}</p>\n          </div>\n          <HistoryGraph\n            data={this.props.completedTodosByDay}\n            totalFinishCount={this.props.completedTodos.length}\n            width={this.state.graphWidth} height={this.state.graphHeight}/>\n        </li>\n      </ul>\n    );\n\n    return (\n      <div className=\"statistics\">\n        {\n          HistoryGraphs\n        }\n        <div className=\"history-details\">\n          <HistoryDetails type={this.state.currentIndex}/>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state: RootState, ownProps: IStatisticsProps) => {\n  const todos = state.todos;\n  const completedTodos = getCompletedTodos(state);\n  const completedTodosByDay: TodosGroup = groupByDay(completedTodos, 'completed_at');\n  const finishedTomatoes = getFinishedTomatoes(state);\n  const finishedTomatoesByDay: TomatoesGroup = groupByDay(finishedTomatoes, 'ended_at');\n  return {\n    todos,\n    completedTodos,\n    completedTodosByDay,\n    finishedTomatoes,\n    finishedTomatoesByDay,\n    ...ownProps\n  };\n};\n\nexport default connect(mapStateToProps)(Statistics);","import React from 'react';\nimport {useHistory} from 'react-router-dom';\nimport {connect} from 'react-redux';\nimport actions from '@/redux/actions';\nimport axios from '@/api/axios';\nimport Todos from '@/applications/Todos';\nimport Tomatoes from '@/applications/Tomatoes';\nimport Statistics from '@/applications/Statisitics';\nimport {Dropdown, Menu, Icon, message} from 'antd';\nimport './style.less';\nimport logo from '@/assets/images/logo.png';\nimport {Dispatch} from 'redux';\nimport {RootState} from '@/redux/reducers';\n\ninterface IHomeProps {\n}\n\ntype ReduxType = ReturnType<typeof mapStateToProps> & ReturnType<typeof mapDispatchToProps>\n\nconst Home = (props: ReduxType) => {\n  const [user, setUser] = React.useState<User>({account: ''});\n  let history = useHistory();\n\n  React.useEffect(() => {\n    const getMe = async () => {\n      try {\n        const response = await axios.get<User>('me');\n        setUser(response.data);\n      } catch (e) {\n        if (e.response.status === 401) {\n        } else {\n          message.error('网络好像有点不太好哦，一会儿再试吧');\n        }\n      }\n    };\n    const getTodos = async () => {\n      try {\n        const response = await axios.get<TodoGetResponse>('todos');\n        const todos = response.data.resources.map((todo) => Object.assign({}, todo, {editing: false}));\n        props.initTodos(todos);\n      } catch (e) {\n        if (e.response.status === 401) {\n        } else {\n          message.error('网络好像有点不太好哦，一会儿再试吧');\n        }\n      }\n    };\n    const getTomatoes = async () => {\n      try {\n        const response = await axios.get<TomatoGetResponse>('tomatoes');\n        props.initTomatoes(response.data.resources);\n      } catch (e) {\n        if (e.response.status === 401) {\n        } else {\n          message.error('网络好像有点不太好哦，一会儿再试吧');\n        }\n      }\n    };\n    getMe();\n    getTodos();\n    getTomatoes();\n    // eslint-disable-next-line\n  }, []);\n\n  const onLogout = () => {\n    localStorage.setItem('x-token', '');\n    history.push('/login');\n  };\n\n  const menu = () => {\n    return (\n      <Menu>\n        <Menu.Item key=\"1\" onClick={onLogout}>\n          <Icon type=\"logout\"/>\n          注销\n        </Menu.Item>\n      </Menu>\n    );\n  };\n\n  return (\n    <div id=\"home\">\n      <header>\n        <div className=\"logo\">\n          <img src={logo} alt=\"logo\"/>\n        </div>\n        <Dropdown overlay={menu}>\n          <div>\n            <span className=\"user\">{user && user.account}</span> <Icon type=\"down\"/>\n          </div>\n        </Dropdown>\n      </header>\n      <main>\n        <Tomatoes/>\n        <Todos/>\n      </main>\n      <Statistics/>\n    </div>\n  );\n};\n\nconst mapStateToProps = (state: RootState, ownProps: IHomeProps) => ({\n  ...ownProps\n});\n\nconst mapDispatchToProps = (dispatch: Dispatch) => {\n  return {\n    initTodos(payload: Todo[]) {\n      dispatch(actions.initTodos(payload))\n    },\n    initTomatoes(payload: Tomato[]) {\n      dispatch(actions.initTomatoes(payload))\n    }\n  }\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Home);","import React from 'react';\nimport {Input, Button, message} from 'antd';\nimport axios from '@/api/axios';\nimport {Link, useHistory} from 'react-router-dom';\nimport './style.less';\n\nconst Login = () => {\n  const [account, setAccount] = React.useState<string>('');\n  const [password, setPassword] = React.useState<string>('');\n  const history = useHistory();\n\n  const onLogin = async () => {\n    try {\n      await axios.post('sign_in/user', {\n        account,\n        password,\n      });\n      history.push('/');\n    } catch (e) {\n      if (e.response.status === 422) {\n        message.warning('用户名或密码错误，请重新输入');\n      } else {\n        message.error('网络好像有点不太好哦，一会儿再试吧');\n      }\n    }\n  };\n\n  const onKeyUp = (e: React.KeyboardEvent) => {\n    if (e.key === 'Enter') {\n      if (inputCheck()) {\n        onLogin();\n      }\n    }\n  };\n\n  const onClick = () => {\n    if (inputCheck()) {\n      onLogin();\n    }\n  };\n\n  const inputCheck = () => {\n    if (account === '') {\n      message.warning('用户名不能为空哦');\n      return false;\n    }\n    if (password === '') {\n      message.warning('密码不能为空哦');\n      return false;\n    }\n    return true;\n  };\n\n  return (\n    <div id=\"login\">\n      <h1>欢迎登录番茄闹钟</h1>\n      <Input\n        placeholder=\"请输入用户名\"\n        value={account}\n        onChange={(e) => setAccount(e.target.value)}\n      />\n      <Input.Password\n        placeholder=\"请输入密码\"\n        value={password}\n        onChange={(e) => setPassword(e.target.value)}\n        onKeyUp={onKeyUp}\n      />\n      <Button\n        type=\"primary\"\n        onClick={onClick}\n      >登录</Button>\n      <p>如果还没有账号，请<Link to='/register'>点击这里注册</Link></p>\n    </div>\n  );\n};\n\nexport default Login;","import React from 'react';\nimport {Link, useHistory} from 'react-router-dom';\nimport axios from '@/api/axios';\nimport {Input, Button, message} from 'antd';\nimport './style.less';\n\nconst Register = () => {\n  const [account, setAccount] = React.useState();\n  const [password, setPassword] = React.useState();\n  const [passwordConfirmation, setPasswordConfirmation] = React.useState();\n  let history = useHistory();\n\n  const onRegister = async () => {\n    try {\n      await axios.post('sign_up/user', {\n        account,\n        password,\n        password_confirmation: passwordConfirmation\n      });\n      history.push('/');\n    } catch (e) {\n      if (e.response.status === 422) {\n        message.warning('用户已存在，请换一个用户名再尝试');\n      } else {\n        message.warning('网络错误，请稍后再试');\n      }\n    }\n  };\n\n  const onKeyUp = (e: React.KeyboardEvent) => {\n    if (e.keyCode === 13) {\n      if (inputCheck()) {\n        onRegister();\n      }\n    }\n  };\n\n  const onClick = () => {\n    if (inputCheck()) {\n      onRegister();\n    }\n  };\n\n  const inputCheck = () => {\n    if (account === '') {\n      message.warning('用户名不能为空哦');\n      return false;\n    }\n    if (password === '') {\n      message.warning('密码不能为空哦');\n      return false;\n    }\n    if (passwordConfirmation !== password) {\n      message.warning('两次输入的密码不一致，请重新输入');\n      return false;\n    }\n    return true;\n  };\n\n  return (\n    <div id=\"register\">\n      <h1>注册一个番茄账号</h1>\n      <Input\n        placeholder=\"请输入用户名\"\n        value={account}\n        onChange={(e) => setAccount(e.target.value)}\n      />\n      <Input.Password\n        placeholder=\"请输入密码\"\n        value={password}\n        onChange={(e) => setPassword(e.target.value)}\n      />\n      <Input.Password\n        placeholder=\"再输入一遍密码\"\n        value={passwordConfirmation}\n        onChange={(e) => setPasswordConfirmation(e.target.value)}\n        onKeyUp={onKeyUp}\n      />\n      <Button\n        type=\"primary\"\n        onClick={onClick}\n      >注册</Button>\n      <p>如果已经有账号了，请<Link to='/login'>点击这里登录</Link></p>\n    </div>\n  );\n};\n\nexport default Register;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport moment from 'moment';\nimport 'moment/locale/zh-cn';\nimport {Provider} from 'react-redux';\nimport store from './redux/store';\n\nimport App from './App';\n\nimport * as serviceWorker from './serviceWorker';\nimport './index.less';\n\nmoment.locale('zh-cn');\n\nReactDOM.render(\n  <Provider store={store}>\n    <App/>\n  </Provider>,\n  document.getElementById('root'));\n\n\nserviceWorker.unregister();\n","import React from 'react';\nimport {\n  HashRouter,\n  Switch,\n  Route\n} from 'react-router-dom';\nimport Home from '@/pages/Home'\nimport Login from '@/pages/Login'\nimport Register from '@/pages/Register'\n\nexport default function App() {\n  return (\n    <HashRouter>\n      <Switch>\n        <Route path='/login'>\n          <Login/>\n        </Route>\n        <Route path='/register'>\n          <Register/>\n        </Route>\n        <Route path='/'>\n          <Home/>\n        </Route>\n      </Switch>\n    </HashRouter>\n  );\n}"],"sourceRoot":""}