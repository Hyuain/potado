{"version":3,"sources":["redux/reducers/index.ts","redux/reducers/todos.ts","redux/actionTypes.ts","redux/reducers/tomatoes.ts","redux/store.ts","config/history.ts","config/axios.ts","components/Tomatoes/CountDown/CountDown.tsx","redux/actions/todos.ts","redux/actions/tomatoes.ts","redux/actions/index.ts","constants.ts","redux/selectors.ts","components/Todos/TodoInput/TodoInput.tsx","components/Todos/TodoItem/TodoItem.tsx","components/Todos/Todos.tsx","components/Tomatoes/TomatoAction/TomatoAction.tsx","components/Tomatoes/TomatoList/TomatoList.tsx","components/Tomatoes/Tomatoes.tsx","components/Statistics/Graph/Graph.tsx","utils/helpers.tsx","components/Statistics/TodoHistoryItem/TodoHistoryItem.tsx","components/Statistics/TodoHistory/TodoHistory.tsx","components/Statistics/TomatoHistoryItem/TomatoHistoryItem.tsx","components/Statistics/TomatoHistory/TomatoHistory.tsx","components/Statistics/Statistics.tsx","pages/Home/Home.tsx","pages/Login/Login.tsx","pages/Register/Register.tsx","serviceWorker.ts","index.tsx","App.tsx"],"names":["combineReducers","todos","state","action","type","payload","map","todo","id","Object","assign","editing","tomatoes","tomato","store","createStore","rootReducer","history","createHashHistory","instance","axios","create","baseURL","headers","interceptors","request","use","config","xToken","localStorage","getItem","error","console","Promise","reject","response","setItem","status","push","timerID","addTodo","initTodos","updateTodo","editTodo","addTomato","initTomatoes","updateTomato","TODO_FILTERS","TOMATO_FILTERS","getTodos","getTodosByFilter","todoFilter","allTodos","notDeletedTodos","filter","deleted","getNotDeletedTodos","completed","getTomatoesByFilter","tomatoFilter","allTomatoes","getTomatoes","description","ended_at","aborted","groupByDay","dataBeforeGroup","keyOfTime","_","groupBy","item","format","parseISO","mapDispatchToProps","actions","connect","ownProps","props","React","useState","setDescription","postTodo","a","async","post","data","resource","suffix","onClick","className","placeholder","value","onChange","e","target","onKeyUp","keyCode","textContent","setTextContent","params","completed_at","Date","put","EditField","theme","Text","onDoubleClick","todoItemClass","classNames","checked","completedTodos","incompleteTodos","key","CountDown","restTime","wholeTime","setInterval","setState","document","title","countDown","onFinish","clearInterval","this","percent","duration","style","width","minutes","Math","floor","seconds","toString","padStart","Component","confirm","TomatoAction","onKeyup","addDescription","startTomato","unfinishedTomato","abortTomato","showConfirm","okText","cancelText","onOk","onCancel","forceUpdate","html","undefined","startAt","parse","started_at","timeNow","getTime","TomatoItem","TomatoList","list","dates","date","finishedTomatoes","length","keys","sort","b","splice","finishedTomatoesByDay","Graph","fill","stroke","strokeWidth","points","height","log","firstDay","range","finishedCount","pointArray","x","y","totalFinishCount","join","genPoints","weekTimeTable","getFriendlyDate","method","ISODate","monthAndDay","weekTime","TodoHistoryItem","time","created_at","TabPane","TodoHistory","CompletedList","completedDates","completedTodosByDay","DeletedList","deletedTodos","tab","TomatoHistoryItem","submitChange","Description","Time","Action","TomatoHistory","endedAt","startedAt","_d","manually_created","addModel","getFriendlyTime","hours","finishedList","finishedDates","totalTime","reduce","abortedList","abortedTomatoes","AddModel","visible","showTime","content","icon","ceil","Statistics","myRef","currentIndex","currentTarget","getAttribute","DetailStatistics","data-index","onLogout","menu","Item","user","setUser","useEffect","get","getMe","resources","overlay","account","setAccount","password","setPassword","useHistory","Password","Error","to","passwordConfirmation","setPasswordConfirmation","password_confirmation","Boolean","window","location","hostname","match","ReactDOM","render","path","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.d5d90678.chunk.js","sourcesContent":["import {combineReducers} from 'redux';\r\nimport todos from './todos';\r\nimport tomatoes from './tomatoes';\r\n\r\nexport default combineReducers({todos, tomatoes});","import {ADD_TODO, INIT_TODOS, UPDATE_TODO, EDIT_TODO} from '../actionTypes';\r\n\r\nexport default function (state: any[] = [], action: any) {\r\n  switch (action.type) {\r\n    case ADD_TODO:\r\n      return [action.payload, ...state];\r\n    case INIT_TODOS:\r\n      return [...action.payload];\r\n    case UPDATE_TODO:\r\n      return state.map(todo => {\r\n        if (todo.id === action.payload.id) {\r\n          return action.payload;\r\n        } else {\r\n          return todo;\r\n        }\r\n      });\r\n    case EDIT_TODO:\r\n      return state.map(todo => {\r\n        if (todo.id === action.payload) {\r\n          return Object.assign({}, todo, {editing: true});\r\n        } else {\r\n          return Object.assign({}, todo, {editing: false});\r\n        }\r\n      });\r\n    default:\r\n      return state;\r\n  }\r\n}","export const ADD_TODO = 'ADD_TODO';\r\nexport const INIT_TODOS = 'INIT_TODOS';\r\nexport const UPDATE_TODO = 'UPDATE_TODO';\r\nexport const EDIT_TODO = 'EDIT_TODO';\r\nexport const ADD_TOMATO = 'ADD_TOMATO';\r\nexport const INIT_TOMATOES = 'INIT_TOMATOES';\r\nexport const UPDATE_TOMATO = 'UPDATE_TOMATO';\r\n","import {ADD_TOMATO, INIT_TOMATOES, UPDATE_TOMATO} from '../actionTypes';\r\n\r\nexport default function (state: any[] = [], action: any) {\r\n  switch (action.type) {\r\n    case ADD_TOMATO:\r\n      return [action.payload, ...state];\r\n    case INIT_TOMATOES:\r\n      return [...action.payload];\r\n    case UPDATE_TOMATO:\r\n      return state.map(tomato => {\r\n      if (tomato.id === action.payload.id) {\r\n        return action.payload;\r\n      } else {\r\n        return tomato;\r\n      }\r\n    });\r\n    default:\r\n      return state;\r\n  }\r\n}","import {createStore} from 'redux';\r\nimport rootReducer from './reducers'\r\n\r\nconst store = createStore(rootReducer);\r\n\r\nexport default store","import {createHashHistory} from 'history';\n\nconst history = createHashHistory();\n\nexport default history;","import axios from 'axios';\nimport history from './history';\n\nconst appId = 'nM5mG7x9MSDwWD4NMoNCLYE4';\nconst appSecret = 'VAAyTtmgzQhn4rks36XBYQfi';\n\nconst instance = axios.create({\n  baseURL: 'https://gp-server.hunger-valley.com/',\n  headers: {\n    't-app-id': appId,\n    't-app-secret': appSecret\n  }\n});\n\ninstance.interceptors.request.use((config) => {\n  const xToken = localStorage.getItem('x-token');\n  if (xToken) {\n    config.headers['Authorization'] = `Bearer ${xToken}`;\n  }\n  return config;\n}, (error) => {\n  console.error(error);\n  return Promise.reject(error);\n});\n\ninstance.interceptors.response.use((response) => {\n  if (response.headers['x-token']) {\n    localStorage.setItem('x-token', response.headers['x-token']);\n  }\n  return response;\n}, (error) => {\n  if(error.response.status === 401){\n    history.push('/login')\n  }\n  return Promise.reject(error);\n});\n\nexport default instance;","import React from 'react';\nimport './CountDown.less'\n\ninterface ICountDownProps {\n  wholeTime: number,\n  duration: number,\n  onFinish: () => void\n}\n\ninterface IContDownStates {\n  restTime: number\n}\n\nlet timerID: NodeJS.Timeout;\n\nclass CountDown extends React.Component <ICountDownProps, IContDownStates> {\n\n  constructor(props: ICountDownProps) {\n    super(props);\n    this.state = {\n      restTime: this.props.wholeTime\n    };\n  }\n\n  get countDown() {\n    const minutes = Math.floor(this.state.restTime / 1000 / 60);\n    const seconds = Math.floor(this.state.restTime / 1000 % 60);\n    return `${minutes.toString().padStart(2, '0')}:${seconds.toString().padStart(2, '0')}`;\n  };\n\n  componentDidMount(): void {\n    timerID = setInterval(() => {\n      const restTime = this.state.restTime;\n      this.setState({restTime: restTime - 1000});\n      document.title = `${this.countDown} - 有一个番茄正在进行`;\n      if (restTime < 1000) {\n        this.props.onFinish();\n        clearInterval(timerID);\n      }\n    }, 1000);\n  }\n\n  componentWillUnmount(): void {\n    this.props.onFinish();\n    clearInterval(timerID);\n  }\n\n  public render() {\n    const percent = 1 - this.state.restTime / this.props.duration;\n    return (\n      <div className=\"count-down\">\n        <span>{this.countDown}</span>\n        <div className=\"progress-bar\" style={{width: `${percent * 100}%`}}></div>\n      </div>\n    );\n  }\n}\n\nexport default CountDown;","import {ADD_TODO, INIT_TODOS, UPDATE_TODO, EDIT_TODO} from '../actionTypes';\r\n\r\nconst addTodo = (payload: any) => {\r\n  return {\r\n    type: ADD_TODO,\r\n    payload\r\n  };\r\n};\r\n\r\nconst initTodos = (payload: any[]) => {\r\n  return {\r\n    type: INIT_TODOS,\r\n    payload\r\n  };\r\n};\r\n\r\nconst updateTodo = (payload: any) => {\r\n  return {\r\n    type: UPDATE_TODO,\r\n    payload\r\n  };\r\n};\r\n\r\nconst editTodo = (payload: number) => {\r\n  return {\r\n    type: EDIT_TODO,\r\n    payload\r\n  };\r\n};\r\n\r\nexport default {\r\n  addTodo,\r\n  initTodos,\r\n  updateTodo,\r\n  editTodo\r\n}","import {ADD_TOMATO, INIT_TOMATOES, UPDATE_TOMATO} from '../actionTypes';\r\n\r\nconst addTomato = (payload: any) => {\r\n  return {\r\n    type: ADD_TOMATO,\r\n    payload\r\n  };\r\n};\r\n\r\nconst initTomatoes = (payload: any[]) => {\r\n  return {\r\n    type: INIT_TOMATOES,\r\n    payload\r\n  };\r\n};\r\n\r\nconst updateTomato = (payload: any) => {\r\n  return {\r\n    type: UPDATE_TOMATO,\r\n    payload\r\n  };\r\n};\r\n\r\nexport default {\r\n  addTomato,\r\n  initTomatoes,\r\n  updateTomato\r\n};","import todos from './todos';\r\nimport tomatoes from './tomatoes';\r\n\r\n\r\nexport default {\r\n  ...todos,\r\n  ...tomatoes\r\n};","export const TODO_FILTERS = {\r\n  ALL: 'all',\r\n  DELETED: 'deleted',\r\n  COMPLETED: 'completed',\r\n  INCOMPLETE: 'incomplete'\r\n};\r\n\r\nexport const TOMATO_FILTERS = {\r\n  ALL: 'all',\r\n  FINISHED: 'finished',\r\n  UNFINISHED: 'unfinished',\r\n  ABORTED: 'aborted'\r\n};","import _ from 'lodash';\r\nimport {format, parseISO} from 'date-fns';\r\nimport {TODO_FILTERS, TOMATO_FILTERS} from '../constants';\r\n\r\nconst getTodos = (store: any) => (store.todos);\r\n\r\nconst getNotDeletedTodos = (store: any) => {\r\n  const allTodos = getTodos(store);\r\n  return allTodos.filter((todo: any) => (!todo.deleted));\r\n};\r\n\r\nexport const getTodosByFilter = (store: any, todoFilter: any) => {\r\n  const allTodos = getTodos(store);\r\n  const notDeletedTodos = getNotDeletedTodos(store);\r\n  switch (todoFilter) {\r\n    case TODO_FILTERS.DELETED:\r\n      return allTodos.filter((todo: any) => (todo.deleted));\r\n    case TODO_FILTERS.COMPLETED:\r\n      return notDeletedTodos.filter((todo: any) => (todo.completed));\r\n    case TODO_FILTERS.INCOMPLETE:\r\n      return notDeletedTodos.filter((todo: any) => (!todo.completed));\r\n    default:\r\n      return notDeletedTodos;\r\n  }\r\n};\r\n\r\nconst getTomatoes = (store: any) => (store.tomatoes);\r\n\r\nexport const getTomatoesByFilter = (store: any, tomatoFilter: any) => {\r\n  const allTomatoes = getTomatoes(store);\r\n  switch (tomatoFilter) {\r\n    case TOMATO_FILTERS.FINISHED:\r\n      return allTomatoes.filter((tomato: any) => (tomato.description && tomato.ended_at && !tomato.aborted));\r\n    case TOMATO_FILTERS.UNFINISHED:\r\n      return allTomatoes.filter((tomato: any) => (!tomato.description && !tomato.ended_at && !tomato.aborted))[0];\r\n    case TOMATO_FILTERS.ABORTED:\r\n      return allTomatoes.filter((tomato: any)=>(!tomato.ended_at && tomato.aborted));\r\n    default:\r\n      return tomatoFilter;\r\n  }\r\n};\r\n\r\nexport const groupByDay = (dataBeforeGroup: any, keyOfTime: string) => {\r\n  return _.groupBy(dataBeforeGroup, (item) => {\r\n    return (format(parseISO(item[keyOfTime]), 'yyyy-MM-dd'));\r\n  });\r\n};","import React from 'react';\r\nimport axios from '../../../config/axios';\r\n\r\nimport {connect} from 'react-redux';\r\nimport actions from '../../../redux/actions/index';\r\n\r\nimport {Input, Icon} from 'antd';\r\nimport './TodoInput.less';\r\n\r\ninterface ITodoInputProps {\r\n  addTodo: (payload: any) => any\r\n}\r\n\r\nconst TodoInput = (props: ITodoInputProps) => {\r\n  const [description, setDescription] = React.useState('');\r\n\r\n  const onKeyup = (e: any) => {\r\n    if (e.keyCode === 13 && description !== '') {\r\n      postTodo();\r\n    }\r\n  };\r\n\r\n  const postTodo = async () => {\r\n    try {\r\n      const response = await axios.post('todos', {description});\r\n      props.addTodo(response.data.resource);\r\n    } catch (e) {\r\n\r\n    }\r\n    setDescription('');\r\n  };\r\n\r\n  const suffix = description ? <Icon type=\"enter\" onClick={postTodo}/> : <span/>;\r\n\r\n  return (\r\n    <div className=\"todo-input\">\r\n      <Input\r\n        placeholder=\"添加新任务\"\r\n        suffix={suffix}\r\n        value={description}\r\n        onChange={e => {\r\n          setDescription(e.target.value);\r\n        }}\r\n        onKeyUp={onKeyup}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state: any, ownProps: any) => ({\r\n  ...ownProps\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n  addTodo: actions.addTodo\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(TodoInput);","import React from 'react';\nimport axios from '../../../config/axios';\nimport classNames from 'classnames';\n\nimport {connect} from 'react-redux';\nimport actions from '../../../redux/actions';\n\nimport {Checkbox, Icon} from 'antd';\nimport './TodoItem.less';\n\ninterface ITodoItemProps {\n  id: number;\n  description: string;\n  completed: boolean;\n  editing: boolean;\n  updateTodo: (payload: any) => any;\n  editTodo: (id: number) => any;\n}\n\nconst TodoItem = (props: ITodoItemProps) => {\n\n  const [textContent, setTextContent] = React.useState(props.description);\n\n  const updateTodo = async (params: any) => {\n    if(params.completed){\n      params.completed_at = new Date()\n    }\n    try {\n      const response = await axios.put(`todos/${props.id}`, params);\n      props.updateTodo(response.data.resource);\n    } catch (e) {\n    }\n  };\n\n  const editTodo = () => {\n    props.editTodo(props.id);\n  };\n\n  const onKeyup = (e: any) => {\n    if (e.keyCode === 13 && textContent !== '') {\n      updateTodo({description: textContent});\n    }\n  };\n\n  const EditField = (\n    <div className=\"edit-filed\">\n      <input type=\"text\"\n             value={textContent}\n             onChange={(e) => {\n               setTextContent(e.target.value);\n             }}\n             onKeyUp={onKeyup}\n      />\n      <div className=\"icon-wrapper\">\n        <Icon type=\"enter\" onClick={() => {\n          updateTodo({description: textContent});\n        }}/>\n        <Icon type=\"delete\" theme=\"filled\" onClick={() => updateTodo({deleted: true})}/>\n      </div>\n    </div>\n  );\n\n  const Text = (\n    <span className=\"text\" onDoubleClick={editTodo}>{textContent}</span>\n  );\n\n  const todoItemClass = classNames({\n    'todo-item': true,\n    'editing': props.editing,\n    'completed': props.completed\n  });\n\n  return (\n    <div className={todoItemClass}>\n      <Checkbox\n        checked={props.completed}\n        onChange={(e) => {\n          updateTodo({completed: e.target.checked});\n        }}\n      />\n      {props.editing ? EditField : Text}\n    </div>\n  );\n};\n\nconst mapStateToProps = (state: any, ownProps: any) => ({\n  ...ownProps\n});\n\nconst mapDispatchToProps = {\n  editTodo: actions.editTodo,\n  updateTodo: actions.updateTodo\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(TodoItem);","import React from 'react';\n\nimport {connect} from 'react-redux';\nimport actions from '../../redux/actions';\nimport {TODO_FILTERS} from '../../constants';\nimport {getTodosByFilter} from '../../redux/selectors';\n\nimport TodoInput from './TodoInput/TodoInput';\nimport TodoItem from './TodoItem/TodoItem';\nimport './Todos.less';\n\n\nconst Todos = (props: any) => {\n\n  return (\n    <div className=\"todos\">\n      <TodoInput/>\n      <div className=\"todo-list\">\n        {\n          props.incompleteTodos.map((todo: any) => (\n            <TodoItem\n              key={todo.id} {...todo}\n            />\n          ))\n        }\n      </div>\n    </div>\n  );\n};\n\nconst mapStateToProps = (state: any, ownProps: any) => {\n  const todos = state.todos;\n  const completedTodos = getTodosByFilter(state, TODO_FILTERS.COMPLETED);\n  const incompleteTodos = getTodosByFilter(state, TODO_FILTERS.INCOMPLETE);\n  return {\n    todos,\n    completedTodos,\n    incompleteTodos,\n    ...ownProps\n  };\n};\n\nconst mapDispatchToProps = {\n  updateTodo: actions.updateTodo\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Todos);","import React from 'react';\nimport axios from '../../../config/axios';\n\nimport CountDown from '../CountDown/CountDown';\n\nimport {Button, Icon, Input, Modal} from 'antd';\nimport './TomatoAction.less';\n\nconst {confirm} = Modal;\n\ninterface ITomatoActionProps {\n  addTomato: (payload: any) => any,\n  updateTomato: (payload: any) => any,\n  unfinishedTomato: any\n}\n\ninterface ITomatoActionState {\n  description: string\n}\n\nclass TomatoAction extends React.Component<ITomatoActionProps, ITomatoActionState> {\n\n  constructor(props: ITomatoActionProps) {\n    super(props);\n    this.state = {\n      description: ''\n    };\n  }\n\n  onKeyup = (e: any) => {\n    if (e.keyCode === 13 && this.state.description !== '') {\n      this.addDescription();\n    }\n  };\n\n  startTomato = async () => {\n    try {\n      const response = await axios.post('tomatoes', {duration: 25 * 60 * 1000});\n      this.props.addTomato(response.data.resource);\n    } catch (e) {\n\n    }\n  };\n\n  updateTomato = async (params: any) => {\n    try {\n      const response = await axios.put(`tomatoes/${this.props.unfinishedTomato.id}`, params);\n      this.props.updateTomato(response.data.resource);\n    } catch (e) {\n    }\n  };\n\n  abortTomato = () => {\n    this.updateTomato({\n      aborted: true\n    });\n    document.title = 'Potado - 你的番茄土豆';\n  };\n\n  showConfirm = () => {\n    confirm({\n      title: '您确定要放弃这个番茄吗？',\n      okText: '确认',\n      cancelText: '关闭',\n      onOk: () => {\n        this.abortTomato();\n      },\n      onCancel() {\n\n      }\n    });\n  };\n\n  onFinish = () => {\n    this.forceUpdate();\n    document.title = 'Potado - 你的番茄土豆';\n  };\n\n  addDescription = () => {\n    if(this.state.description === ''){\n      this.setState({description: '这是一个没有描述的番茄'})\n    }\n    this.updateTomato({\n      description: this.state.description,\n      ended_at: new Date()\n    });\n    this.setState({description: ''});\n  };\n\n  public render() {\n    let html = <div/>;\n    if (this.props.unfinishedTomato === undefined) {\n      html = <Button className=\"start-button\" onClick={this.startTomato}>开始一个番茄</Button>;\n    } else {\n      const startAt = Date.parse(this.props.unfinishedTomato.started_at);\n      const duration = this.props.unfinishedTomato.duration;\n      const timeNow = new Date().getTime();\n      if (timeNow - startAt > duration) {\n        html = (\n          <div className=\"input-wrapper\">\n            <Input\n              value={this.state.description}\n              placeholder=\"请输入刚刚完成的任务\"\n              onChange={(e) => {\n                this.setState({description: e.target.value});\n              }}\n              onKeyUp={this.onKeyup}\n            />\n            <Icon\n              type=\"close-circle\"\n              className=\"abort\"\n              onClick={this.showConfirm}\n            />\n          </div>\n        );\n      } else {\n        const wholeTime = duration - timeNow + startAt;\n        html = (\n          <div className=\"count-down-wrapper\">\n            <CountDown\n              wholeTime={wholeTime}\n              duration={duration}\n              onFinish={this.onFinish}\n            />\n            <Icon\n              type=\"close-circle\"\n              className=\"abort\"\n              onClick={this.showConfirm}\n            />\n          </div>\n        );\n      }\n    }\n    return (\n      <div className=\"tomato-action\">\n        {html}\n      </div>\n    );\n  }\n}\n\nexport default TomatoAction;","import React from 'react';\r\nimport {format, parseISO} from 'date-fns';\r\nimport './TomatoList.less'\r\n\r\ninterface ITomatoListProps {\r\n  finishedTomatoes: any\r\n}\r\n\r\nconst TomatoItem = (props: any) => {\r\n  return (\r\n    <div className=\"tomato-item\">\r\n      <span className=\"time-range\">{format(parseISO(props.started_at),'HH:mm')} - {format(parseISO(props.ended_at),'HH:mm')}</span>\r\n      <span className=\"description\">{props.description}</span>\r\n    </div>\r\n  );\r\n};\r\n\r\nclass TomatoList extends React.Component<ITomatoListProps, any> {\r\n\r\n  get dates() {\r\n    const dates = Object.keys(this.props.finishedTomatoes);\r\n    return dates.sort((a, b) => Date.parse(b) - Date.parse(a)).splice(0,3);\r\n  }\r\n\r\n  componentDidMount(): void {\r\n  }\r\n\r\n  public render() {\r\n    const list = this.dates.map(date => {\r\n      const tomatoes = this.props.finishedTomatoes[date];\r\n      return (\r\n        <div key={date} className=\"daily-tomatoes\">\r\n          <div className=\"title\">\r\n            <span className=\"date-time\">{format(new Date(date),'M月dd日')}</span>\r\n            <span className=\"finished-count\">完成了{tomatoes.length}个番茄</span>\r\n          </div>\r\n          <div className=\"details\">\r\n            {\r\n              tomatoes.map((tomato:any) => (<TomatoItem key={tomato.id} {...tomato}/>))\r\n            }\r\n          </div>\r\n        </div>\r\n      );\r\n    });\r\n    return (\r\n      <div className=\"tomato-list\">\r\n        {\r\n          list\r\n        }\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default TomatoList;","import React from 'react';\nimport TomatoAction from './TomatoAction/TomatoAction';\nimport TomatoList from './TomatoList/TomatoList';\n\nimport actions from '../../redux/actions';\nimport {connect} from 'react-redux';\nimport {TOMATO_FILTERS} from '../../constants';\nimport {getTomatoesByFilter, groupByDay} from '../../redux/selectors';\n\n\nimport './Tomatoes.less';\n\ninterface ITomatoesProps {\n  tomatoes: any[],\n  addTomato: (payload: any) => any,\n  updateTomato: (payload: any) => any,\n  unfinishedTomato: any,\n  finishedTomatoes: any[],\n  finishedTomatoesByDay: any\n}\n\nconst Tomatoes = (props: ITomatoesProps) => {\n\n  return (\n    <div className=\"tomatoes\">\n      <TomatoAction\n        addTomato={props.addTomato}\n        updateTomato={props.updateTomato}\n        unfinishedTomato={props.unfinishedTomato}\n      />\n      <TomatoList\n        finishedTomatoes={props.finishedTomatoesByDay}\n      />\n    </div>\n  );\n};\n\nconst mapStateToProps = (state: any) => {\n  const tomatoes = state.tomatoes;\n  const finishedTomatoes = getTomatoesByFilter(state, TOMATO_FILTERS.FINISHED);\n  const unfinishedTomato = getTomatoesByFilter(state, TOMATO_FILTERS.UNFINISHED);\n  const finishedTomatoesByDay = groupByDay(finishedTomatoes, 'started_at');\n  return {\n    tomatoes,\n    finishedTomatoes,\n    unfinishedTomato,\n    finishedTomatoesByDay\n  };\n};\n\nconst mapDispatchToProps = {\n  addTomato: actions.addTomato,\n  updateTomato: actions.updateTomato,\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Tomatoes);","import React from 'react';\r\n\r\ninterface IGraphProps {\r\n  data: any,\r\n  totalFinishCount: number,\r\n  width: number,\r\n  height: number\r\n}\r\n\r\nconst Graph = (props: IGraphProps) => {\r\n\r\n  const genPoints = (width: number, height: number) => {\r\n    const dates = Object.keys(props.data).sort((a, b) => Date.parse(a) - Date.parse(b));\r\n    console.log(dates);\r\n    const firstDay = Date.parse(dates[0]) - 24 * 60 * 60 * 1000;\r\n    if (firstDay) {\r\n      const lastDay = new Date().getTime();\r\n      const range = lastDay - firstDay;\r\n      let finishedCount = 0;\r\n      const pointArray = dates.map(date => {\r\n        let x = (Date.parse(date) - firstDay) / range * width;\r\n        if (range === 0) {\r\n          x = width;\r\n        }\r\n        console.log(date);\r\n        console.log(x);\r\n        finishedCount += props.data[date].length;\r\n        const y = (1 - finishedCount / props.totalFinishCount) * height;\r\n        return `${x},${y}`;\r\n      });\r\n      return [`0,${height}`, ...pointArray, `${width},0`,`${width},${height}`].join(' ');\r\n    } else {\r\n      return `0,${height} ${width},${height}`;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"graph\">\r\n      <svg>\r\n        <polygon fill=\"rgba(215,78,78,.1)\" stroke=\"rgba(215,78,78,.5)\" strokeWidth=\"1\"\r\n                 points={genPoints(props.width, props.height)}/>\r\n      </svg>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Graph;","import {format, parseISO} from 'date-fns';\r\n\r\ninterface IWeekTimeTable {\r\n  [key: string]: string\r\n}\r\n\r\nconst weekTimeTable: IWeekTimeTable = {\r\n  '1': '周一', '2': '周二', '3': '周三', '4': '周四', '5': '周五', '6': '周六', '7': '周日'\r\n};\r\n\r\nexport const getFriendlyDate = (date: string, method: string) => {\r\n  const ISODate = parseISO(date);\r\n  const monthAndDay = format(ISODate, 'M月dd日');\r\n  const weekTime = format(ISODate, 'i');\r\n  switch (method) {\r\n    case 'monthAndDay':\r\n      return monthAndDay;\r\n    case 'dayOfWeek':\r\n      return weekTimeTable[weekTime]\r\n  }\r\n};","import React from 'react';\r\nimport axios from '../../../config/axios';\r\nimport {format, parseISO} from 'date-fns';\r\nimport {getFriendlyDate} from '../../../utils/helpers';\r\n\r\nimport {connect} from 'react-redux';\r\nimport actions from '../../../redux/actions';\r\n\r\nimport './TodoHistoryItem.less';\r\n\r\n\r\ninterface ITodoHistoryItemProps {\r\n  todo: any,\r\n  type: string,\r\n  updateTodo: (payload: any) => void\r\n}\r\n\r\nclass TodoHistoryItem extends React.Component<ITodoHistoryItemProps, any> {\r\n\r\n\r\n  updateTodo = async (params: any) => {\r\n    try {\r\n      const response = await axios.put(`todos/${this.props.todo.id}`, params);\r\n      this.props.updateTodo(response.data.resource);\r\n    } catch (e) {\r\n\r\n    }\r\n  };\r\n\r\n  render() {\r\n    let time = null;\r\n    if (this.props.type === 'completed') {\r\n      time = (<span className=\"time\">{format(parseISO(this.props.todo.completed_at), 'HH:mm')}</span>);\r\n    } else if (this.props.type === 'deleted') {\r\n      time = (<span className=\"time\">{getFriendlyDate(this.props.todo.created_at,'monthAndDay')}</span>);\r\n    }\r\n\r\n    let action = null;\r\n    if (this.props.type === 'completed') {\r\n      action = (\r\n        <div className=\"action\">\r\n          <span onClick={() => this.updateTodo({completed: false})}>恢复</span>\r\n          <span onClick={() => this.updateTodo({deleted: true})}>删除</span>\r\n        </div>\r\n      );\r\n    } else if (this.props.type === 'deleted') {\r\n      action = (\r\n        <div className=\"action\">\r\n          <span onClick={() => this.updateTodo({deleted: false})}>恢复</span>\r\n        </div>\r\n      );\r\n    }\r\n\r\n    return (\r\n      <div>\r\n        <div className=\"todo-history-item\">\r\n          <div className=\"text\">\r\n            {\r\n              time\r\n            }\r\n            <span className=\"description\">{this.props.todo.description}</span>\r\n          </div>\r\n          {\r\n            action\r\n          }\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state: any, ownProps: any) => ({\r\n  ...ownProps\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n  updateTodo: actions.updateTodo\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(TodoHistoryItem);","import React from 'react';\r\nimport {getFriendlyDate} from '../../../utils/helpers';\r\n\r\nimport {connect} from 'react-redux';\r\nimport {getTodosByFilter, groupByDay} from '../../../redux/selectors';\r\nimport {TODO_FILTERS} from '../../../constants';\r\n\r\nimport TodoHistoryItem from '../TodoHistoryItem/TodoHistoryItem';\r\n\r\nimport {Tabs} from 'antd';\r\nimport './TodoHistory.less';\r\n\r\nconst {TabPane} = Tabs;\r\n\r\n\r\ninterface ITodoHistoryProps {\r\n  todos: any[],\r\n  deletedTodos: any[],\r\n  completedTodos: any[],\r\n  completedTodosByDay: any\r\n}\r\n\r\nclass TodoHistory extends React.Component<ITodoHistoryProps, any> {\r\n\r\n  get completedDates() {\r\n    const dates = Object.keys(this.props.completedTodosByDay);\r\n    return dates.sort((a, b) => (Date.parse(b) - Date.parse(a)));\r\n  }\r\n\r\n  public render() {\r\n\r\n    const CompletedList = this.completedDates.map((date) => {\r\n      const todos = this.props.completedTodosByDay[date];\r\n      return (\r\n        <div key={date} className=\"daily-todos\">\r\n          <div className=\"title\">\r\n            <p className=\"date\">\r\n              <span className=\"date-time\">{getFriendlyDate(date,'monthAndDay')}</span>\r\n              <span className=\"week-time\">{getFriendlyDate(date,'dayOfWeek')}</span>\r\n            </p>\r\n            <span className=\"finished-count\">完成了 {todos.length} 个任务</span>\r\n          </div>\r\n          <div className=\"details\">\r\n            {\r\n              todos.map((todo: any) => (<TodoHistoryItem key={todo.id} todo={todo} type=\"completed\"/>))\r\n            }\r\n          </div>\r\n        </div>\r\n      );\r\n    });\r\n\r\n    const DeletedList = this.props.deletedTodos.map((todo) => {\r\n      return (\r\n        <div key={todo.id}>\r\n          <TodoHistoryItem key={todo.id} todo={todo} type=\"deleted\"/>\r\n        </div>\r\n      );\r\n    });\r\n\r\n    return (\r\n      <div className=\"todo-history\">\r\n        <Tabs className=\"todo-history-tabs\" type=\"card\">\r\n          <TabPane className=\"todo-history-tab-pane\" tab=\"已完成的任务\" key=\"1\">\r\n            {\r\n              CompletedList\r\n            }\r\n          </TabPane>\r\n          <TabPane className=\"todo-history-tab-pane\" tab=\"已删除的任务\" key=\"2\">\r\n            {\r\n              DeletedList\r\n            }\r\n          </TabPane>\r\n        </Tabs>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state: any, ownProps: any) => {\r\n  const todos = state.todos;\r\n  const deletedTodos = getTodosByFilter(state, TODO_FILTERS.DELETED);\r\n  const completedTodos = getTodosByFilter(state, TODO_FILTERS.COMPLETED);\r\n  const completedTodosByDay = groupByDay(completedTodos, 'completed_at');\r\n  return {\r\n    todos,\r\n    completedTodos,\r\n    completedTodosByDay,\r\n    deletedTodos,\r\n    ...ownProps\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps)(TodoHistory);","import React from 'react';\r\nimport axios from '../../../config/axios';\r\nimport {format, parseISO} from 'date-fns';\r\n\r\nimport {connect} from 'react-redux';\r\nimport actions from '../../../redux/actions';\r\n\r\nimport './TomatoHistoryItem.less';\r\nimport {getFriendlyDate} from '../../../utils/helpers';\r\n\r\ninterface ITomatoHistoryItemProps {\r\n  type: string,\r\n  tomato: any,\r\n  updateTomato: (payload: any) => any,\r\n}\r\n\r\nclass TomatoHistoryItem extends React.Component<ITomatoHistoryItemProps, any> {\r\n\r\n  constructor(props: ITomatoHistoryItemProps) {\r\n    super(props);\r\n    this.state = {\r\n      editing: false,\r\n      textContent: this.props.tomato.description || '这是一个没有描述的番茄'\r\n    };\r\n  }\r\n\r\n  updateTomato = async (params: any) => {\r\n    try {\r\n      const response = await axios.put(`tomatoes/${this.props.tomato.id}`, params);\r\n      this.props.updateTomato(response.data.resource);\r\n    } catch (e) {\r\n\r\n    }\r\n  };\r\n\r\n  submitChange = () => {\r\n    this.updateTomato({description: this.state.textContent});\r\n    this.setState({editing: false});\r\n  };\r\n\r\n  onKeyup = (e: any) => {\r\n    if (e.keyCode === 13 && this.state.textContent !== '') {\r\n      this.submitChange();\r\n    }\r\n  };\r\n\r\n  render() {\r\n\r\n    const EditField = (\r\n      <div className=\"edit-filed\">\r\n        <input type=\"text\"\r\n               value={this.state.textContent}\r\n               onChange={(e) => {\r\n                 this.setState({textContent: e.target.value});\r\n               }}\r\n               onKeyUp={this.onKeyup}\r\n        />\r\n      </div>\r\n    );\r\n\r\n    const Description = (\r\n      <span className=\"description\">\r\n        {this.props.tomato.description || '这是一个没有描述的番茄'}\r\n      </span>\r\n    );\r\n\r\n    let Time = null;\r\n    if (this.props.type === 'finished') {\r\n      Time = (\r\n        <span className=\"time\">\r\n          {format(parseISO(this.props.tomato.started_at), 'HH:mm')} -\r\n          {format(parseISO(this.props.tomato.ended_at), 'HH:mm')}\r\n        </span>)\r\n      ;\r\n    } else if (this.props.type === 'aborted') {\r\n      Time = (<span className=\"time\">{getFriendlyDate(this.props.tomato.started_at,'monthAndDay')}</span>);\r\n    }\r\n\r\n    let Action = null;\r\n    if (this.state.editing) {\r\n      Action = (\r\n        <div className=\"action\">\r\n          <span onClick={() => this.submitChange()}>提交</span>\r\n          <span onClick={() => this.setState({editing: false})}>取消</span>\r\n        </div>\r\n      );\r\n    } else {\r\n      if (this.props.type === 'finished') {\r\n        Action = (\r\n          <div className=\"action\">\r\n            <span onClick={() => this.setState({editing: true})}>编辑</span>\r\n            <span onClick={() => this.updateTomato({aborted: true})}>删除</span>\r\n          </div>\r\n        );\r\n      } else if (this.props.type === 'aborted') {\r\n        Action = (\r\n          <div className=\"action\">\r\n            <span onClick={() => this.setState({editing: true})}>编辑</span>\r\n          </div>\r\n        );\r\n      }\r\n    }\r\n\r\n\r\n    return (\r\n      <div>\r\n        <div className={`tomato-history-item ${this.state.editing ? 'editing' : '' }`}>\r\n          <div className=\"text\">\r\n            {\r\n              Time\r\n            }\r\n            {\r\n              this.state.editing ? EditField : Description\r\n            }\r\n          </div>\r\n          {\r\n            Action\r\n          }\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state: any, ownProps: any) => ({\r\n  ...ownProps\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n  updateTomato: actions.updateTomato\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(TomatoHistoryItem);","import React from 'react';\r\nimport axios from '../../../config/axios';\r\nimport {getFriendlyDate} from '../../../utils/helpers';\r\n\r\nimport {connect} from 'react-redux';\r\nimport {getTomatoesByFilter, groupByDay} from '../../../redux/selectors';\r\nimport actions from '../../../redux/actions';\r\nimport {TOMATO_FILTERS} from '../../../constants';\r\n\r\nimport TomatoHistoryItem from '../TomatoHistoryItem/TomatoHistoryItem';\r\n\r\nimport {Tabs, DatePicker, Modal, Input, Button, Popover} from 'antd';\r\nimport './TomatoHistory.less';\r\n\r\nconst {TabPane} = Tabs;\r\n\r\ninterface ITomatoHistoryProps {\r\n  tomatoes: any[],\r\n  finishedTomatoes: any[],\r\n  finishedTomatoesByDay: any,\r\n  abortedTomatoes: any[],\r\n  addTomato: (payload: any) => any,\r\n}\r\n\r\nclass TomatoHistory extends React.Component<ITomatoHistoryProps, any> {\r\n\r\n  constructor(props: ITomatoHistoryProps) {\r\n    super(props);\r\n    this.state = {\r\n      addModel: false,\r\n      startedAt: new Date(),\r\n      description: ''\r\n    };\r\n  }\r\n\r\n  addTomato = async () => {\r\n    if (this.state.description === '') {\r\n      this.setState({description: '这是一个没有描述的番茄'});\r\n    }\r\n    const endedAt = new Date(Date.parse(this.state.startedAt._d) + 25 * 60 * 1000);\r\n    try {\r\n      const response = await axios.post('tomatoes', {\r\n        started_at: this.state.startedAt,\r\n        ended_at: endedAt,\r\n        description: this.state.description,\r\n        manually_created: true\r\n      });\r\n      this.props.addTomato(response.data.resource);\r\n      console.log(response);\r\n      this.setState({addModel: false});\r\n    } catch (e) {\r\n\r\n    }\r\n  };\r\n\r\n  onKeyup = (e: any) => {\r\n    if (e.keyCode === 13) {\r\n      this.addTomato();\r\n    }\r\n  };\r\n\r\n  get finishedDates() {\r\n    const dates = Object.keys(this.props.finishedTomatoesByDay);\r\n    return dates.sort((a, b) => (Date.parse(b) - Date.parse(a)));\r\n  }\r\n\r\n  get finishedTotalPages() {\r\n    return Math.ceil(this.finishedDates.length / 5);\r\n  }\r\n\r\n  getFriendlyTime = (time: number) => {\r\n    const seconds = Math.floor(time / 1000);\r\n    if (seconds < 60) return `${seconds}秒`;\r\n    const minutes = Math.floor(seconds / 60);\r\n    if (minutes < 60) return `${minutes}分钟`;\r\n    const hours = Math.floor(minutes / 60);\r\n    return `${hours}小时${Math.floor(minutes % 60)}分钟`;\r\n  };\r\n\r\n  render() {\r\n\r\n    const finishedList = this.finishedDates.map((date) => {\r\n      const tomatoes = this.props.finishedTomatoesByDay[date];\r\n      const totalTime = tomatoes.reduce((totalTime: number, tomato: any) => {\r\n        return totalTime + Date.parse(tomato.ended_at) - Date.parse(tomato.started_at);\r\n      }, 0);\r\n      return (\r\n        <div key={date} className=\"daily-tomatoes\">\r\n          <div className=\"title\">\r\n            <p className=\"date\">\r\n              <span className=\"date-time\">{getFriendlyDate(date, 'monthAndDay')}</span>\r\n              <span className=\"week-time\">{getFriendlyDate(date, 'dayOfWeek')}</span>\r\n            </p>\r\n            <p className=\"finished-count\">完成了 {tomatoes.length} 个番茄</p>\r\n            <p className=\"total-time\">总计{this.getFriendlyTime(totalTime)}</p>\r\n          </div>\r\n          <div className=\"details\">\r\n            {\r\n              tomatoes.map((tomato: any) => (<TomatoHistoryItem key={tomato.id} tomato={tomato} type=\"finished\"/>))\r\n            }\r\n          </div>\r\n        </div>\r\n      );\r\n    });\r\n\r\n    const abortedList = this.props.abortedTomatoes.map((tomato) => {\r\n      return (\r\n        <div key={tomato.id}>\r\n          <TomatoHistoryItem key={tomato.id} tomato={tomato} type=\"aborted\"/>\r\n        </div>\r\n      );\r\n    });\r\n\r\n    const AddModel = (\r\n      <Modal\r\n        title=\"补记一个番茄\"\r\n        visible={this.state.addModel}\r\n        onOk={this.addTomato}\r\n        onCancel={() => this.setState({addModel: false})}\r\n      >\r\n        <div className=\"add-model-item\">\r\n          <span>番茄的开始时间：</span>\r\n          <DatePicker\r\n            placeholder=\"\"\r\n            showTime\r\n            onOk={(value) => this.setState({startedAt: value})}\r\n            onChange={(value) => this.setState({startedAt: value})}\r\n          />\r\n        </div>\r\n        <div className=\"add-model-item\">\r\n          <span>番茄描述：</span>\r\n          <Input\r\n            type=\"text\"\r\n            onChange={(e) => this.setState({description: e.target.value})}\r\n            onKeyUp={this.onKeyup}\r\n          />\r\n        </div>\r\n      </Modal>\r\n    );\r\n\r\n    return (\r\n      <div className=\"tomato-history\">\r\n        {\r\n          AddModel\r\n        }\r\n        <Tabs className=\"tomato-history-tabs\" type=\"card\">\r\n          <TabPane className=\"tomato-history-tab-pane\" tab=\"完成的番茄\" key=\"1\">\r\n            <Popover content=\"补记番茄\">\r\n              <Button onClick={() => this.setState({addModel: true})} icon=\"plus\"/>\r\n            </Popover>,\r\n            {\r\n              finishedList\r\n            }\r\n          </TabPane>\r\n          <TabPane className=\"tomato-history-tab-pane\" tab=\"被打断的番茄\" key=\"2\">\r\n            {\r\n              abortedList\r\n            }\r\n          </TabPane>\r\n        </Tabs>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state: any, ownProps: any) => {\r\n  const tomatoes = state.todos;\r\n  const finishedTomatoes = getTomatoesByFilter(state, TOMATO_FILTERS.FINISHED);\r\n  const abortedTomatoes = getTomatoesByFilter(state, TOMATO_FILTERS.ABORTED);\r\n  const finishedTomatoesByDay = groupByDay(finishedTomatoes, 'started_at');\r\n  return {\r\n    tomatoes,\r\n    finishedTomatoes,\r\n    finishedTomatoesByDay,\r\n    abortedTomatoes,\r\n    ...ownProps\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n  addTomato: actions.addTomato,\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(TomatoHistory);","import React from 'react';\r\n\r\nimport {connect} from 'react-redux';\r\nimport {TODO_FILTERS, TOMATO_FILTERS} from '../../constants';\r\nimport {getTodosByFilter, getTomatoesByFilter, groupByDay} from '../../redux/selectors';\r\n\r\nimport Graph from './Graph/Graph';\r\nimport TodoHistory from './TodoHistory/TodoHistory';\r\nimport TomatoHistory from './TomatoHistory/TomatoHistory';\r\n\r\nimport './Statistics.less';\r\n\r\ninterface IStatisticsProps {\r\n  todos: any[],\r\n  completedTodos: any[],\r\n  completedTodosByDay: any,\r\n  finishedTomatoes: any[],\r\n  finishedTomatoesByDay: any\r\n}\r\n\r\nclass Statistics extends React.Component<IStatisticsProps, any> {\r\n\r\n  private myRef: any;\r\n\r\n  constructor(props: IStatisticsProps) {\r\n    super(props);\r\n    this.state = {\r\n      currentIndex: '1'\r\n    };\r\n  }\r\n\r\n  onClick = (e: any) => {\r\n    this.setState({currentIndex: e.currentTarget.getAttribute('data-index')});\r\n  };\r\n\r\n  public render() {\r\n\r\n    let DetailStatistics = null;\r\n    switch (this.state.currentIndex) {\r\n      case '1':\r\n        DetailStatistics = <TomatoHistory/>;\r\n        break;\r\n      case '2':\r\n        DetailStatistics = <TodoHistory/>;\r\n    }\r\n\r\n    return (\r\n      <div className=\"statistics\">\r\n        <ul>\r\n          <li\r\n            className={`statistics-item ${this.state.currentIndex === '1' ? 'active' : ''}`}\r\n            onClick={this.onClick}\r\n            data-index=\"1\">\r\n            <div className=\"text\">\r\n              <p>番茄历史</p>\r\n              <p>累计完成番茄</p>\r\n              <p>{this.props.finishedTomatoes.length}</p>\r\n            </div>\r\n            <Graph\r\n              data={this.props.finishedTomatoesByDay}\r\n              totalFinishCount={this.props.finishedTomatoes.length}\r\n              width={240} height={60}/>\r\n          </li>\r\n          <li\r\n            className={`statistics-item ${this.state.currentIndex === '2' ? 'active' : ''}`}\r\n            onClick={this.onClick}\r\n            data-index=\"2\">\r\n            <div className=\"text\">\r\n              <p>任务历史</p>\r\n              <p>累计完成任务</p>\r\n              <p>{this.props.completedTodos.length}</p>\r\n            </div>\r\n            <Graph\r\n              data={this.props.completedTodosByDay}\r\n              totalFinishCount={this.props.completedTodos.length} width={240}\r\n              height={60}/>\r\n          </li>\r\n        </ul>\r\n        <div className=\"detail-statistics\">\r\n          {DetailStatistics}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state: any, ownProps: any) => {\r\n  const todos = state.todos;\r\n  const completedTodos = getTodosByFilter(state, TODO_FILTERS.COMPLETED);\r\n  const completedTodosByDay = groupByDay(completedTodos, 'completed_at');\r\n  const finishedTomatoes = getTomatoesByFilter(state, TOMATO_FILTERS.FINISHED);\r\n  const finishedTomatoesByDay = groupByDay(finishedTomatoes, 'ended_at');\r\n  return {\r\n    todos,\r\n    completedTodos,\r\n    completedTodosByDay,\r\n    finishedTomatoes,\r\n    finishedTomatoesByDay,\r\n    ...ownProps\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps)(Statistics);","import React from 'react';\nimport history from '../../config/history';\nimport axios from '../../config/axios';\n\nimport {connect} from 'react-redux';\nimport actions from '../../redux/actions';\n\nimport Todos from '../../components/Todos/Todos';\nimport Tomatoes from '../../components/Tomatoes/Tomatoes';\nimport Statistics from '../../components/Statistics/Statistics';\n\nimport {Dropdown, Menu, Icon} from 'antd';\nimport './Home.less';\n\ninterface IHomeProps {\n  initTodos: (payload: any)=>any,\n  initTomatoes: (payload: any)=>any,\n}\n\nconst onLogout = () => {\n  localStorage.setItem('x-token', '');\n  history.push('/login');\n};\n\nconst menu = () => {\n  return (\n    <Menu>\n      <Menu.Item key=\"1\">\n        <Icon type=\"user\"/>\n        个人设置\n      </Menu.Item>\n      <Menu.Item key=\"2\" onClick={onLogout}>\n        <Icon type=\"logout\"/>\n        注销\n      </Menu.Item>\n    </Menu>\n  );\n};\n\nconst Home = (props: IHomeProps) => {\n  const [user, setUser] = React.useState<any>({});\n\n  React.useEffect(() => {\n    const getMe = async () => {\n      try {\n        const response = await axios.get('me');\n        setUser(response.data);\n      } catch (e) {\n      }\n    };\n    const getTodos = async () => {\n      try {\n        const response = await axios.get('todos');\n        const todos = response.data.resources.map((todo: any) => Object.assign({}, todo, {editing: false}));\n        props.initTodos(todos);\n      } catch (e) {\n      }\n    };\n    const getTomatoes = async () => {\n      try {\n        const response = await axios.get('tomatoes');\n        props.initTomatoes(response.data.resources);\n      } catch (e) {\n      }\n    };\n    getMe();\n    getTodos();\n    getTomatoes();\n    // eslint-disable-next-line\n  }, []);\n\n\n  return (\n    <div id=\"home\">\n      <header>\n        <span className=\"logo\">LOGO</span>\n        <Dropdown overlay={menu}>\n          <div>\n            <span>{user && user.account}</span> <Icon type=\"down\"/>\n          </div>\n        </Dropdown>\n      </header>\n      <main>\n        <Tomatoes/>\n        <Todos/>\n      </main>\n      <Statistics/>\n    </div>\n  );\n};\n\nconst mapStateToProps = (state: any, ownProps: any) => ({\n  ...ownProps\n});\n\nconst mapDispatchToProps = {\n  initTodos: actions.initTodos,\n  initTomatoes: actions.initTomatoes\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Home);","import React from 'react';\nimport {Input, Button} from 'antd';\nimport axios from '../../config/axios';\nimport {Link, useHistory} from 'react-router-dom';\nimport './Login.less';\n\nexport default function () {\n  const [account, setAccount] = React.useState();\n  const [password, setPassword] = React.useState();\n  let history = useHistory();\n\n  const onLogin = async () => {\n    try {\n      await axios.post('sign_in/user', {\n        account,\n        password,\n      });\n      history.push('/');\n    } catch (e) {\n      throw new Error(e);\n    }\n  };\n\n  return (\n    <div id=\"register\">\n      <h1>登录我的番茄闹钟</h1>\n      <Input\n        placeholder=\"Username\"\n        value={account}\n        onChange={(e) => setAccount(e.target.value)}\n      />\n      <Input.Password\n        placeholder=\"input password\"\n        value={password}\n        onChange={(e) => setPassword(e.target.value)}\n      />\n      <Button\n        type=\"primary\"\n        onClick={onLogin}\n      >登录</Button>\n      <p>如果还没有账号，请<Link to='/register'>点击这里注册</Link></p>\n    </div>\n  );\n}","import React from 'react';\nimport {Input, Button} from 'antd';\nimport axios from '../../config/axios';\nimport {Link, useHistory} from 'react-router-dom';\nimport './Register.less';\n\nexport default function () {\n  const [account, setAccount] = React.useState();\n  const [password, setPassword] = React.useState();\n  const [passwordConfirmation, setPasswordConfirmation] = React.useState();\n  let history = useHistory();\n\n  const onRegister = async () => {\n    try {\n      await axios.post('sign_up/user', {\n        account,\n        password,\n        password_confirmation: passwordConfirmation\n      });\n      history.push('/');\n    } catch (e) {\n      throw new Error(e);\n    }\n  };\n\n  return (\n    <div id=\"register\">\n      <h1>登录我的番茄闹钟</h1>\n      <Input\n        placeholder=\"Username\"\n        value={account}\n        onChange={(e) => setAccount(e.target.value)}\n      />\n      <Input.Password\n        placeholder=\"input password\"\n        value={password}\n        onChange={(e) => setPassword(e.target.value)}\n      />\n      <Input.Password\n        placeholder=\"confirm password\"\n        value={passwordConfirmation}\n        onChange={(e) => setPasswordConfirmation(e.target.value)}\n      />\n      <Button\n        type=\"primary\"\n        onClick={onRegister}\n      >注册</Button>\n      <p>如果已经有账号了，请<Link to='/login'>点击这里登录</Link></p>\n    </div>\n  );\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport {Provider} from 'react-redux';\nimport store from './redux/store'\n\nimport App from './App';\n\nimport * as serviceWorker from './serviceWorker';\nimport './index.less';\n\n\nReactDOM.render(\n  <Provider store={store}>\n    <App/>\n  </Provider>,\n  document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import React from 'react';\nimport {\n  HashRouter,\n  Switch,\n  Route\n} from 'react-router-dom';\nimport Home from './pages/Home/Home'\nimport Login from './pages/Login/Login'\nimport Register from './pages/Register/Register'\n\nexport default function App() {\n  return (\n    <HashRouter>\n      <Switch>\n        <Route path='/login'>\n          <Login/>\n        </Route>\n        <Route path='/register'>\n          <Register/>\n        </Route>\n        <Route path='/'>\n          <Home/>\n        </Route>\n      </Switch>\n    </HashRouter>\n  );\n}"],"sourceRoot":""}